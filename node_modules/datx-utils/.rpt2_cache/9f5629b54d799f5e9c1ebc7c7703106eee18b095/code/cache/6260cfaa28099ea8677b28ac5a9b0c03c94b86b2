{"code":"import { extendObservable } from 'mobx';\r\nexport function mapItems(data, fn) {\r\n    if (data instanceof Array) {\r\n        return data.map(function (item) { return fn(item); });\r\n    }\r\n    return data === null ? null : fn(data);\r\n}\r\n/**\r\n * Flatten a 2D array to a single array\r\n *\r\n * @export\r\n * @template T\r\n * @param {Array<Array<T>>} data Arrays to flatten\r\n * @returns {Array<T>} Flattened array\r\n */\r\nexport function flatten(data) {\r\n    return (_a = []).concat.apply(_a, data);\r\n    var _a;\r\n}\r\n/**\r\n * Return a unique set of items in an array\r\n *\r\n * @export\r\n * @template T\r\n * @param {Array<T>} data Array to filter\r\n * @returns {Array<T>} Filtered array\r\n */\r\nexport function uniq(data) {\r\n    return Array.from(new Set(data));\r\n}\r\n/**\r\n * Check if the given variable is an array with at least one falsy value\r\n *\r\n * @export\r\n * @param {any} value A variable to check\r\n * @returns {boolean} The given variable is an array with at least one falsy value\r\n */\r\nexport function isFalsyArray(value) {\r\n    return value instanceof Array && !value.every(Boolean);\r\n}\r\n/**\r\n * Add a computed property to an observable object\r\n *\r\n * @export\r\n * @param {object} obj Observable object\r\n * @param {string} key Property to add\r\n * @param {() => any} getter Getter function\r\n * @param {(name: string) => void} [setter] Setter function\r\n */\r\nexport function assignComputed(obj, key, getter, setter) {\r\n    var newObj = {};\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        get: getter,\r\n        set: setter,\r\n    });\r\n    extendObservable(obj, newObj);\r\n}\r\nexport function error() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    // tslint:disable-next-line:no-console\r\n    console.error.apply(console, [\"[datx error]\"].concat(args));\r\n}\r\nexport function warn() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    if (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'test') {\r\n        return;\r\n    }\r\n    // tslint:disable-next-line:no-console\r\n    console.warn.apply(console, [\"[datx warning]\"].concat(args));\r\n}\r\nexport function deprecated() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    if (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'test') {\r\n        return;\r\n    }\r\n    // tslint:disable-next-line:no-console\r\n    console.warn.apply(console, [\"[datx deprecated]\"].concat(args));\r\n}\r\nexport function info() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    if (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'test') {\r\n        return;\r\n    }\r\n    // tslint:disable-next-line:no-console\r\n    console.info.apply(console, [\"[datx info]\"].concat(args));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNyYy9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBb0IsTUFBTSxNQUFNLENBQUM7QUFjekQsTUFBTSxtQkFBeUIsSUFBZ0IsRUFBRSxFQUFrQjtJQUNqRSxJQUFJLElBQUksWUFBWSxLQUFLLEVBQUU7UUFDekIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQUMsSUFBSSxJQUFLLE9BQUEsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFSLENBQVEsQ0FBQyxDQUFDO0tBQ3JDO0lBQ0QsT0FBTyxJQUFJLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN6QyxDQUFDO0FBRUQ7Ozs7Ozs7R0FPRztBQUNILE1BQU0sa0JBQXFCLElBQXFCO0lBQzlDLE9BQU8sQ0FBQSxLQUFDLEVBQWUsQ0FBQSxDQUFDLE1BQU0sV0FBSSxJQUFJLEVBQUU7O0FBQzFDLENBQUM7QUFFRDs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxlQUFrQixJQUFjO0lBQ3BDLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ25DLENBQUM7QUFFRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLHVCQUF1QixLQUFLO0lBQ2hDLE9BQU8sS0FBSyxZQUFZLEtBQUssSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDekQsQ0FBQztBQUVEOzs7Ozs7OztHQVFHO0FBQ0gsTUFBTSx5QkFDSixHQUFXLEVBQ1gsR0FBVyxFQUNYLE1BQWlCLEVBQ2pCLE1BQStCO0lBRS9CLElBQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNsQixNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUU7UUFDOUIsWUFBWSxFQUFFLElBQUk7UUFDbEIsR0FBRyxFQUFFLE1BQU07UUFDWCxHQUFHLEVBQUUsTUFBTTtLQUNaLENBQUMsQ0FBQztJQUNILGdCQUFnQixDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNoQyxDQUFDO0FBRUQsTUFBTTtJQUFnQixjQUFPO1NBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztRQUFQLHlCQUFPOztJQUMzQixzQ0FBc0M7SUFDdEMsT0FBTyxDQUFDLEtBQUssT0FBYixPQUFPLEdBQU8sY0FBYyxTQUFLLElBQUksR0FBRTtBQUN6QyxDQUFDO0FBRUQsTUFBTTtJQUFlLGNBQU87U0FBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO1FBQVAseUJBQU87O0lBQzFCLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEtBQUssWUFBWSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLE1BQU0sRUFBRTtRQUM1RSxPQUFPO0tBQ1I7SUFFRCxzQ0FBc0M7SUFDdEMsT0FBTyxDQUFDLElBQUksT0FBWixPQUFPLEdBQU0sZ0JBQWdCLFNBQUssSUFBSSxHQUFFO0FBQzFDLENBQUM7QUFFRCxNQUFNO0lBQXFCLGNBQU87U0FBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO1FBQVAseUJBQU87O0lBQ2hDLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEtBQUssWUFBWSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLE1BQU0sRUFBRTtRQUM1RSxPQUFPO0tBQ1I7SUFFRCxzQ0FBc0M7SUFDdEMsT0FBTyxDQUFDLElBQUksT0FBWixPQUFPLEdBQU0sbUJBQW1CLFNBQUssSUFBSSxHQUFFO0FBQzdDLENBQUM7QUFFRCxNQUFNO0lBQWUsY0FBTztTQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87UUFBUCx5QkFBTzs7SUFDMUIsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxZQUFZLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEtBQUssTUFBTSxFQUFFO1FBQzVFLE9BQU87S0FDUjtJQUVELHNDQUFzQztJQUN0QyxPQUFPLENBQUMsSUFBSSxPQUFaLE9BQU8sR0FBTSxhQUFhLFNBQUssSUFBSSxHQUFFO0FBQ3ZDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2V4dGVuZE9ic2VydmFibGUsIElPYnNlcnZhYmxlT2JqZWN0fSBmcm9tICdtb2J4JztcblxuLyoqXG4gKiBNYXAgYSBzaW5nbGUgaXRlbSBvciBhbiBhcnJheSBvZiBpdGVtc1xuICpcbiAqIEBleHBvcnRcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdGVtcGxhdGUgVVxuICogQHBhcmFtIHsoVHxBcnJheTxUPil9IGRhdGEgRGF0YSB0byBpdGVyYXRlIG92ZXJcbiAqIEBwYXJhbSB7KGl0ZW06IFQpID0+IFV9IGZuIEZ1bmN0aW9uIGNhbGxlZCBmb3IgZXZlcnkgZGF0YSBpdGVtXG4gKiBAcmV0dXJucyB7KFV8QXJyYXk8VT58bnVsbCl9IFJldHVybiB2YWx1ZSBvZiB0aGUgY2FsbGJhY2sgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hcEl0ZW1zPFQsIFU+KGRhdGE6IEFycmF5PFQ+LCBmbjogKGl0ZW06IFQpID0+IFUpOiBBcnJheTxVPjtcbmV4cG9ydCBmdW5jdGlvbiBtYXBJdGVtczxULCBVPihkYXRhOiBULCBmbjogKGl0ZW06IFQpID0+IFUpOiBVfG51bGw7XG5leHBvcnQgZnVuY3Rpb24gbWFwSXRlbXM8VCwgVT4oZGF0YTogVHxBcnJheTxUPiwgZm46IChpdGVtOiBUKSA9PiBVKTogVXxBcnJheTxVPnxudWxsIHtcbiAgaWYgKGRhdGEgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgIHJldHVybiBkYXRhLm1hcCgoaXRlbSkgPT4gZm4oaXRlbSkpO1xuICB9XG4gIHJldHVybiBkYXRhID09PSBudWxsID8gbnVsbCA6IGZuKGRhdGEpO1xufVxuXG4vKipcbiAqIEZsYXR0ZW4gYSAyRCBhcnJheSB0byBhIHNpbmdsZSBhcnJheVxuICpcbiAqIEBleHBvcnRcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0FycmF5PEFycmF5PFQ+Pn0gZGF0YSBBcnJheXMgdG8gZmxhdHRlblxuICogQHJldHVybnMge0FycmF5PFQ+fSBGbGF0dGVuZWQgYXJyYXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZsYXR0ZW48VD4oZGF0YTogQXJyYXk8QXJyYXk8VD4+KTogQXJyYXk8VD4ge1xuICByZXR1cm4gKFtdIGFzIEFycmF5PFQ+KS5jb25jYXQoLi4uZGF0YSk7XG59XG5cbi8qKlxuICogUmV0dXJuIGEgdW5pcXVlIHNldCBvZiBpdGVtcyBpbiBhbiBhcnJheVxuICpcbiAqIEBleHBvcnRcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0FycmF5PFQ+fSBkYXRhIEFycmF5IHRvIGZpbHRlclxuICogQHJldHVybnMge0FycmF5PFQ+fSBGaWx0ZXJlZCBhcnJheVxuICovXG5leHBvcnQgZnVuY3Rpb24gdW5pcTxUPihkYXRhOiBBcnJheTxUPik6IEFycmF5PFQ+IHtcbiAgcmV0dXJuIEFycmF5LmZyb20obmV3IFNldChkYXRhKSk7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhlIGdpdmVuIHZhcmlhYmxlIGlzIGFuIGFycmF5IHdpdGggYXQgbGVhc3Qgb25lIGZhbHN5IHZhbHVlXG4gKlxuICogQGV4cG9ydFxuICogQHBhcmFtIHthbnl9IHZhbHVlIEEgdmFyaWFibGUgdG8gY2hlY2tcbiAqIEByZXR1cm5zIHtib29sZWFufSBUaGUgZ2l2ZW4gdmFyaWFibGUgaXMgYW4gYXJyYXkgd2l0aCBhdCBsZWFzdCBvbmUgZmFsc3kgdmFsdWVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRmFsc3lBcnJheSh2YWx1ZSk6IGJvb2xlYW4ge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBBcnJheSAmJiAhdmFsdWUuZXZlcnkoQm9vbGVhbik7XG59XG5cbi8qKlxuICogQWRkIGEgY29tcHV0ZWQgcHJvcGVydHkgdG8gYW4gb2JzZXJ2YWJsZSBvYmplY3RcbiAqXG4gKiBAZXhwb3J0XG4gKiBAcGFyYW0ge29iamVjdH0gb2JqIE9ic2VydmFibGUgb2JqZWN0XG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFByb3BlcnR5IHRvIGFkZFxuICogQHBhcmFtIHsoKSA9PiBhbnl9IGdldHRlciBHZXR0ZXIgZnVuY3Rpb25cbiAqIEBwYXJhbSB7KG5hbWU6IHN0cmluZykgPT4gdm9pZH0gW3NldHRlcl0gU2V0dGVyIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NpZ25Db21wdXRlZChcbiAgb2JqOiBvYmplY3QsXG4gIGtleTogc3RyaW5nLFxuICBnZXR0ZXI6ICgpID0+IGFueSxcbiAgc2V0dGVyPzogKG5hbWU6IHN0cmluZykgPT4gdm9pZCxcbikge1xuICBjb25zdCBuZXdPYmogPSB7fTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIGdldDogZ2V0dGVyLFxuICAgIHNldDogc2V0dGVyLFxuICB9KTtcbiAgZXh0ZW5kT2JzZXJ2YWJsZShvYmosIG5ld09iaik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlcnJvciguLi5hcmdzKSB7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlXG4gIGNvbnNvbGUuZXJyb3IoYFtkYXR4IGVycm9yXWAsIC4uLmFyZ3MpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd2FybiguLi5hcmdzKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIHx8IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdCcpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tY29uc29sZVxuICBjb25zb2xlLndhcm4oYFtkYXR4IHdhcm5pbmddYCwgLi4uYXJncyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZXByZWNhdGVkKC4uLmFyZ3MpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICd0ZXN0Jykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlXG4gIGNvbnNvbGUud2FybihgW2RhdHggZGVwcmVjYXRlZF1gLCAuLi5hcmdzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluZm8oLi4uYXJncykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyB8fCBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3QnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbnNvbGVcbiAgY29uc29sZS5pbmZvKGBbZGF0eCBpbmZvXWAsIC4uLmFyZ3MpO1xufVxuIl19","map":{"mappings":""},"dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx-utils/helpers.d.ts","text":"/**\r\n * Map a single item or an array of items\r\n *\r\n * @export\r\n * @template T\r\n * @template U\r\n * @param {(T|Array<T>)} data Data to iterate over\r\n * @param {(item: T) => U} fn Function called for every data item\r\n * @returns {(U|Array<U>|null)} Return value of the callback function\r\n */\r\nexport declare function mapItems<T, U>(data: Array<T>, fn: (item: T) => U): Array<U>;\r\nexport declare function mapItems<T, U>(data: T, fn: (item: T) => U): U | null;\r\n/**\r\n * Flatten a 2D array to a single array\r\n *\r\n * @export\r\n * @template T\r\n * @param {Array<Array<T>>} data Arrays to flatten\r\n * @returns {Array<T>} Flattened array\r\n */\r\nexport declare function flatten<T>(data: Array<Array<T>>): Array<T>;\r\n/**\r\n * Return a unique set of items in an array\r\n *\r\n * @export\r\n * @template T\r\n * @param {Array<T>} data Array to filter\r\n * @returns {Array<T>} Filtered array\r\n */\r\nexport declare function uniq<T>(data: Array<T>): Array<T>;\r\n/**\r\n * Check if the given variable is an array with at least one falsy value\r\n *\r\n * @export\r\n * @param {any} value A variable to check\r\n * @returns {boolean} The given variable is an array with at least one falsy value\r\n */\r\nexport declare function isFalsyArray(value: any): boolean;\r\n/**\r\n * Add a computed property to an observable object\r\n *\r\n * @export\r\n * @param {object} obj Observable object\r\n * @param {string} key Property to add\r\n * @param {() => any} getter Getter function\r\n * @param {(name: string) => void} [setter] Setter function\r\n */\r\nexport declare function assignComputed(obj: object, key: string, getter: () => any, setter?: (name: string) => void): void;\r\nexport declare function error(...args: any[]): void;\r\nexport declare function warn(...args: any[]): void;\r\nexport declare function deprecated(...args: any[]): void;\r\nexport declare function info(...args: any[]): void;\r\n"}}

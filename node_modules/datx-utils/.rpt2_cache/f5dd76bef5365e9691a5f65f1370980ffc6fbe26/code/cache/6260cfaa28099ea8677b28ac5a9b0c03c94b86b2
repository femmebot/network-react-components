{"code":"import { extendObservable } from 'mobx';\r\nexport function mapItems(data, fn) {\r\n    if (data instanceof Array) {\r\n        return data.map(function (item) { return fn(item); });\r\n    }\r\n    return data === null ? null : fn(data);\r\n}\r\n/**\r\n * Flatten a 2D array to a single array\r\n *\r\n * @export\r\n * @template T\r\n * @param {Array<Array<T>>} data Arrays to flatten\r\n * @returns {Array<T>} Flattened array\r\n */\r\nexport function flatten(data) {\r\n    return (_a = []).concat.apply(_a, data);\r\n    var _a;\r\n}\r\n/**\r\n * Return a unique set of items in an array\r\n *\r\n * @export\r\n * @template T\r\n * @param {Array<T>} data Array to filter\r\n * @returns {Array<T>} Filtered array\r\n */\r\nexport function uniq(data) {\r\n    return Array.from(new Set(data));\r\n}\r\n/**\r\n * Check if the given variable is an array with at least one falsy value\r\n *\r\n * @export\r\n * @param {any} value A variable to check\r\n * @returns {boolean} The given variable is an array with at least one falsy value\r\n */\r\nexport function isFalsyArray(value) {\r\n    return value instanceof Array && !value.every(Boolean);\r\n}\r\n/**\r\n * Add a computed property to an observable object\r\n *\r\n * @export\r\n * @param {object} obj Observable object\r\n * @param {string} key Property to add\r\n * @param {() => any} getter Getter function\r\n * @param {(name: string) => void} [setter] Setter function\r\n */\r\nexport function assignComputed(obj, key, getter, setter) {\r\n    var newObj = {};\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        get: getter,\r\n        set: setter,\r\n    });\r\n    extendObservable(obj, newObj);\r\n}\r\nexport function error() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    // tslint:disable-next-line:no-console\r\n    console.error.apply(console, [\"[datx error]\"].concat(args));\r\n}\r\nexport function warn() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    if (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'test') {\r\n        return;\r\n    }\r\n    // tslint:disable-next-line:no-console\r\n    console.warn.apply(console, [\"[datx warning]\"].concat(args));\r\n}\r\nexport function deprecated() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    if (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'test') {\r\n        return;\r\n    }\r\n    // tslint:disable-next-line:no-console\r\n    console.warn.apply(console, [\"[datx deprecated]\"].concat(args));\r\n}\r\nexport function info() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    if (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'test') {\r\n        return;\r\n    }\r\n    // tslint:disable-next-line:no-console\r\n    console.info.apply(console, [\"[datx info]\"].concat(args));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNyYy9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxnQkFBZ0IsRUFBb0IsTUFBTSxNQUFNLENBQUM7QUFjekQsTUFBTSxtQkFBeUIsSUFBZ0IsRUFBRSxFQUFrQjtJQUNqRSxFQUFFLENBQUMsQ0FBQyxJQUFJLFlBQVksS0FBSyxDQUFDLENBQUMsQ0FBQztRQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFDLElBQUksSUFBSyxPQUFBLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBUixDQUFRLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQ0QsTUFBTSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3pDLENBQUM7QUFFRDs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxrQkFBcUIsSUFBcUI7SUFDOUMsTUFBTSxDQUFDLENBQUEsS0FBQyxFQUFlLENBQUEsQ0FBQyxNQUFNLFdBQUksSUFBSSxFQUFFOztBQUMxQyxDQUFDO0FBRUQ7Ozs7Ozs7R0FPRztBQUNILE1BQU0sZUFBa0IsSUFBYztJQUNwQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ25DLENBQUM7QUFFRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLHVCQUF1QixLQUFLO0lBQ2hDLE1BQU0sQ0FBQyxLQUFLLFlBQVksS0FBSyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUN6RCxDQUFDO0FBRUQ7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLHlCQUNKLEdBQVcsRUFDWCxHQUFXLEVBQ1gsTUFBaUIsRUFDakIsTUFBK0I7SUFFL0IsSUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ2xCLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRTtRQUM5QixZQUFZLEVBQUUsSUFBSTtRQUNsQixHQUFHLEVBQUUsTUFBTTtRQUNYLEdBQUcsRUFBRSxNQUFNO0tBQ1osQ0FBQyxDQUFDO0lBQ0gsZ0JBQWdCLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ2hDLENBQUM7QUFFRCxNQUFNO0lBQWdCLGNBQU87U0FBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO1FBQVAseUJBQU87O0lBQzNCLHNDQUFzQztJQUN0QyxPQUFPLENBQUMsS0FBSyxPQUFiLE9BQU8sR0FBTyxjQUFjLFNBQUssSUFBSSxHQUFFO0FBQ3pDLENBQUM7QUFFRCxNQUFNO0lBQWUsY0FBTztTQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87UUFBUCx5QkFBTzs7SUFDMUIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEtBQUssWUFBWSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDN0UsTUFBTSxDQUFDO0lBQ1QsQ0FBQztJQUVELHNDQUFzQztJQUN0QyxPQUFPLENBQUMsSUFBSSxPQUFaLE9BQU8sR0FBTSxnQkFBZ0IsU0FBSyxJQUFJLEdBQUU7QUFDMUMsQ0FBQztBQUVELE1BQU07SUFBcUIsY0FBTztTQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87UUFBUCx5QkFBTzs7SUFDaEMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEtBQUssWUFBWSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDN0UsTUFBTSxDQUFDO0lBQ1QsQ0FBQztJQUVELHNDQUFzQztJQUN0QyxPQUFPLENBQUMsSUFBSSxPQUFaLE9BQU8sR0FBTSxtQkFBbUIsU0FBSyxJQUFJLEdBQUU7QUFDN0MsQ0FBQztBQUVELE1BQU07SUFBZSxjQUFPO1NBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztRQUFQLHlCQUFPOztJQUMxQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxZQUFZLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQztRQUM3RSxNQUFNLENBQUM7SUFDVCxDQUFDO0lBRUQsc0NBQXNDO0lBQ3RDLE9BQU8sQ0FBQyxJQUFJLE9BQVosT0FBTyxHQUFNLGFBQWEsU0FBSyxJQUFJLEdBQUU7QUFDdkMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZXh0ZW5kT2JzZXJ2YWJsZSwgSU9ic2VydmFibGVPYmplY3R9IGZyb20gJ21vYngnO1xuXG4vKipcbiAqIE1hcCBhIHNpbmdsZSBpdGVtIG9yIGFuIGFycmF5IG9mIGl0ZW1zXG4gKlxuICogQGV4cG9ydFxuICogQHRlbXBsYXRlIFRcbiAqIEB0ZW1wbGF0ZSBVXG4gKiBAcGFyYW0geyhUfEFycmF5PFQ+KX0gZGF0YSBEYXRhIHRvIGl0ZXJhdGUgb3ZlclxuICogQHBhcmFtIHsoaXRlbTogVCkgPT4gVX0gZm4gRnVuY3Rpb24gY2FsbGVkIGZvciBldmVyeSBkYXRhIGl0ZW1cbiAqIEByZXR1cm5zIHsoVXxBcnJheTxVPnxudWxsKX0gUmV0dXJuIHZhbHVlIG9mIHRoZSBjYWxsYmFjayBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFwSXRlbXM8VCwgVT4oZGF0YTogQXJyYXk8VD4sIGZuOiAoaXRlbTogVCkgPT4gVSk6IEFycmF5PFU+O1xuZXhwb3J0IGZ1bmN0aW9uIG1hcEl0ZW1zPFQsIFU+KGRhdGE6IFQsIGZuOiAoaXRlbTogVCkgPT4gVSk6IFV8bnVsbDtcbmV4cG9ydCBmdW5jdGlvbiBtYXBJdGVtczxULCBVPihkYXRhOiBUfEFycmF5PFQ+LCBmbjogKGl0ZW06IFQpID0+IFUpOiBVfEFycmF5PFU+fG51bGwge1xuICBpZiAoZGF0YSBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgcmV0dXJuIGRhdGEubWFwKChpdGVtKSA9PiBmbihpdGVtKSk7XG4gIH1cbiAgcmV0dXJuIGRhdGEgPT09IG51bGwgPyBudWxsIDogZm4oZGF0YSk7XG59XG5cbi8qKlxuICogRmxhdHRlbiBhIDJEIGFycmF5IHRvIGEgc2luZ2xlIGFycmF5XG4gKlxuICogQGV4cG9ydFxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7QXJyYXk8QXJyYXk8VD4+fSBkYXRhIEFycmF5cyB0byBmbGF0dGVuXG4gKiBAcmV0dXJucyB7QXJyYXk8VD59IEZsYXR0ZW5lZCBhcnJheVxuICovXG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlbjxUPihkYXRhOiBBcnJheTxBcnJheTxUPj4pOiBBcnJheTxUPiB7XG4gIHJldHVybiAoW10gYXMgQXJyYXk8VD4pLmNvbmNhdCguLi5kYXRhKTtcbn1cblxuLyoqXG4gKiBSZXR1cm4gYSB1bmlxdWUgc2V0IG9mIGl0ZW1zIGluIGFuIGFycmF5XG4gKlxuICogQGV4cG9ydFxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7QXJyYXk8VD59IGRhdGEgQXJyYXkgdG8gZmlsdGVyXG4gKiBAcmV0dXJucyB7QXJyYXk8VD59IEZpbHRlcmVkIGFycmF5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bmlxPFQ+KGRhdGE6IEFycmF5PFQ+KTogQXJyYXk8VD4ge1xuICByZXR1cm4gQXJyYXkuZnJvbShuZXcgU2V0KGRhdGEpKTtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gdmFyaWFibGUgaXMgYW4gYXJyYXkgd2l0aCBhdCBsZWFzdCBvbmUgZmFsc3kgdmFsdWVcbiAqXG4gKiBAZXhwb3J0XG4gKiBAcGFyYW0ge2FueX0gdmFsdWUgQSB2YXJpYWJsZSB0byBjaGVja1xuICogQHJldHVybnMge2Jvb2xlYW59IFRoZSBnaXZlbiB2YXJpYWJsZSBpcyBhbiBhcnJheSB3aXRoIGF0IGxlYXN0IG9uZSBmYWxzeSB2YWx1ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNGYWxzeUFycmF5KHZhbHVlKTogYm9vbGVhbiB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIEFycmF5ICYmICF2YWx1ZS5ldmVyeShCb29sZWFuKTtcbn1cblxuLyoqXG4gKiBBZGQgYSBjb21wdXRlZCBwcm9wZXJ0eSB0byBhbiBvYnNlcnZhYmxlIG9iamVjdFxuICpcbiAqIEBleHBvcnRcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmogT2JzZXJ2YWJsZSBvYmplY3RcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgUHJvcGVydHkgdG8gYWRkXG4gKiBAcGFyYW0geygpID0+IGFueX0gZ2V0dGVyIEdldHRlciBmdW5jdGlvblxuICogQHBhcmFtIHsobmFtZTogc3RyaW5nKSA9PiB2b2lkfSBbc2V0dGVyXSBTZXR0ZXIgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2lnbkNvbXB1dGVkKFxuICBvYmo6IG9iamVjdCxcbiAga2V5OiBzdHJpbmcsXG4gIGdldHRlcjogKCkgPT4gYW55LFxuICBzZXR0ZXI/OiAobmFtZTogc3RyaW5nKSA9PiB2b2lkLFxuKSB7XG4gIGNvbnN0IG5ld09iaiA9IHt9O1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBnZXR0ZXIsXG4gICAgc2V0OiBzZXR0ZXIsXG4gIH0pO1xuICBleHRlbmRPYnNlcnZhYmxlKG9iaiwgbmV3T2JqKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVycm9yKC4uLmFyZ3MpIHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbnNvbGVcbiAgY29uc29sZS5lcnJvcihgW2RhdHggZXJyb3JdYCwgLi4uYXJncyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3YXJuKC4uLmFyZ3MpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICd0ZXN0Jykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlXG4gIGNvbnNvbGUud2FybihgW2RhdHggd2FybmluZ11gLCAuLi5hcmdzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlcHJlY2F0ZWQoLi4uYXJncykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyB8fCBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3QnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWNvbnNvbGVcbiAgY29uc29sZS53YXJuKGBbZGF0eCBkZXByZWNhdGVkXWAsIC4uLmFyZ3MpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5mbyguLi5hcmdzKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIHx8IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdCcpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tY29uc29sZVxuICBjb25zb2xlLmluZm8oYFtkYXR4IGluZm9dYCwgLi4uYXJncyk7XG59XG4iXX0=","map":{"mappings":""},"dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx-utils/helpers.d.ts","text":"/**\r\n * Map a single item or an array of items\r\n *\r\n * @export\r\n * @template T\r\n * @template U\r\n * @param {(T|Array<T>)} data Data to iterate over\r\n * @param {(item: T) => U} fn Function called for every data item\r\n * @returns {(U|Array<U>|null)} Return value of the callback function\r\n */\r\nexport declare function mapItems<T, U>(data: Array<T>, fn: (item: T) => U): Array<U>;\r\nexport declare function mapItems<T, U>(data: T, fn: (item: T) => U): U | null;\r\n/**\r\n * Flatten a 2D array to a single array\r\n *\r\n * @export\r\n * @template T\r\n * @param {Array<Array<T>>} data Arrays to flatten\r\n * @returns {Array<T>} Flattened array\r\n */\r\nexport declare function flatten<T>(data: Array<Array<T>>): Array<T>;\r\n/**\r\n * Return a unique set of items in an array\r\n *\r\n * @export\r\n * @template T\r\n * @param {Array<T>} data Array to filter\r\n * @returns {Array<T>} Filtered array\r\n */\r\nexport declare function uniq<T>(data: Array<T>): Array<T>;\r\n/**\r\n * Check if the given variable is an array with at least one falsy value\r\n *\r\n * @export\r\n * @param {any} value A variable to check\r\n * @returns {boolean} The given variable is an array with at least one falsy value\r\n */\r\nexport declare function isFalsyArray(value: any): boolean;\r\n/**\r\n * Add a computed property to an observable object\r\n *\r\n * @export\r\n * @param {object} obj Observable object\r\n * @param {string} key Property to add\r\n * @param {() => any} getter Getter function\r\n * @param {(name: string) => void} [setter] Setter function\r\n */\r\nexport declare function assignComputed(obj: object, key: string, getter: () => any, setter?: (name: string) => void): void;\r\nexport declare function error(...args: any[]): void;\r\nexport declare function warn(...args: any[]): void;\r\nexport declare function deprecated(...args: any[]): void;\r\nexport declare function info(...args: any[]): void;\r\n"}}

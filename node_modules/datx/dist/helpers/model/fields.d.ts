import { FieldType } from '../../enums/FieldType';
import { IIdentifier } from '../../interfaces/IIdentifier';
import { TRefValue } from '../../interfaces/TRefValue';
import { PureModel } from '../../PureModel';
export declare function getField(model: PureModel, key: string): any;
export declare function updateField(model: PureModel, key: string, value: any, type: FieldType): void;
export declare function getRef(model: PureModel, key: string): PureModel | Array<PureModel> | null;
export declare function updateRef(model: PureModel, key: string, value: TRefValue): void;
/**
 * Updates the model identifier and all the existing references to the model
 *
 * @export
 * @param {PureModel} model Model to be updated
 * @param {IIdentifier} newId New model identifier
 */
export declare function updateModelId(model: PureModel, newId: IIdentifier): void;
/**
 * Get the id of the referenced model
 *
 * @export
 * @param {PureModel} model Source model
 * @param {string} key Referenced model property name
 * @returns {IIdentifier} Referenced model id
 */
export declare function getRefId(model: PureModel, key: string): IIdentifier | Array<IIdentifier>;
/**
 * Set the id of the referenced model
 *
 * @export
 * @param {PureModel} model Source model
 * @param {string} key Referenced model property name
 * @param {IIdentifier} value The new value
 * @returns {void} Referenced model id
 */
export declare function setRefId(model: PureModel, key: string, value: IIdentifier | Array<IIdentifier>): void;

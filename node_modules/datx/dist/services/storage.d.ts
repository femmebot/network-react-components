import { IDictionary } from 'datx-utils';
import { IObservableObject } from 'mobx';
import { IReferenceOptions } from '../interfaces/IReferenceOptions';
import { PureModel } from '../PureModel';
export declare class DataStorage {
    private modelData;
    private modelClassData;
    initModel(model: PureModel): {
        data: {};
        meta: {};
    } & IObservableObject;
    getModelData(model: PureModel): IDictionary<any>;
    getModelDataKey(model: PureModel, key: string): any;
    setModelData(model: PureModel, data: IDictionary): void;
    setModelDataKey(model: PureModel, key: string, value?: any): void;
    getModelMeta(model: PureModel): IDictionary;
    getModelMetaKey(model: PureModel, key: string): any;
    setModelMeta(model: PureModel, meta: IDictionary): IDictionary<any>;
    setModelMetaKey(model: PureModel, key: string, value?: any): void;
    setModelClassMetaKey(model: typeof PureModel, key: string, value?: any): void;
    getModelClassMetaKey(obj: typeof PureModel, key: string): any;
    addModelDefaultField(model: typeof PureModel, key: string, value?: any): void;
    getModelDefaults(obj: typeof PureModel): IDictionary;
    addModelClassReference(model: typeof PureModel, key: string, options: IReferenceOptions): void;
    getModelClassReferences(obj: typeof PureModel): IDictionary<IReferenceOptions>;
    getModelReferenceOptions(model: PureModel, key: string): IReferenceOptions;
    private __getModelData(model);
    private clear();
}
export declare const storage: DataStorage;

{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ReferenceType } from '../enums/ReferenceType';\r\nimport { DECORATE_MODEL } from '../errors';\r\nimport { error } from '../helpers/format';\r\nimport { isModel } from '../helpers/mixin';\r\nimport prop from '../prop';\r\nexport function setupModel(Base, _a) {\r\n    var _b = _a === void 0 ? { fields: {} } : _a, fields = _b.fields, references = _b.references, type = _b.type, idAttribute = _b.idAttribute, typeAttribute = _b.typeAttribute;\r\n    var BaseClass = Base;\r\n    if (!isModel(BaseClass)) {\r\n        throw error(DECORATE_MODEL);\r\n    }\r\n    var ModelWithProps = /** @class */ (function (_super) {\r\n        tslib_1.__extends(ModelWithProps, _super);\r\n        function ModelWithProps() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        return ModelWithProps;\r\n    }(BaseClass));\r\n    if (type) {\r\n        ModelWithProps.type = type;\r\n    }\r\n    if (idAttribute) {\r\n        prop.identifier(ModelWithProps.prototype, idAttribute);\r\n    }\r\n    if (typeAttribute) {\r\n        prop.type(ModelWithProps.prototype, typeAttribute);\r\n    }\r\n    if (fields) {\r\n        Object.keys(fields).forEach(function (key) {\r\n            prop.defaultValue(fields[key])(ModelWithProps.prototype, key);\r\n        });\r\n    }\r\n    if (references) {\r\n        Object.keys(references).forEach(function (key) {\r\n            var _a = references[key], model = _a.model, property = _a.property;\r\n            switch (references[key].type) {\r\n                case ReferenceType.TO_ONE:\r\n                    prop.toOne(model)(ModelWithProps.prototype, key);\r\n                    return;\r\n                case ReferenceType.TO_MANY:\r\n                    prop.toMany(model, property)(ModelWithProps.prototype, key);\r\n                    return;\r\n                default:\r\n                    prop.toOneOrMany(model)(ModelWithProps.prototype, key);\r\n                    return;\r\n            }\r\n        });\r\n    }\r\n    return ModelWithProps;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dXBNb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9taXhpbnMvc2V0dXBNb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUEsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQ3JELE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDekMsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQ3hDLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUl6QyxPQUFPLElBQUksTUFBTSxTQUFTLENBQUM7QUFHM0IsTUFBTSxxQkFDSixJQUErQixFQUMvQixFQWEyQjtRQWIzQix3Q0FhMkIsRUFaekIsa0JBQU0sRUFDTiwwQkFBVSxFQUNWLGNBQUksRUFDSiw0QkFBVyxFQUNYLGdDQUFhO0lBVWYsSUFBTSxTQUFTLEdBQUcsSUFBd0IsQ0FBQztJQUUzQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUFFO1FBQ3ZCLE1BQU0sS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0tBQzdCO0lBRUQ7UUFBNkIsMENBQVM7UUFBdEM7O1FBQXdDLENBQUM7UUFBRCxxQkFBQztJQUFELENBQUMsQUFBekMsQ0FBNkIsU0FBUyxHQUFHO0lBRXpDLElBQUksSUFBSSxFQUFFO1FBQ1IsY0FBYyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7S0FDNUI7SUFFRCxJQUFJLFdBQVcsRUFBRTtRQUNmLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztLQUN4RDtJQUVELElBQUksYUFBYSxFQUFFO1FBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxhQUFhLENBQUMsQ0FBQztLQUNwRDtJQUVELElBQUksTUFBTSxFQUFFO1FBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQyxHQUFHO1lBQzlCLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNoRSxDQUFDLENBQUMsQ0FBQztLQUNKO0lBRUQsSUFBSSxVQUFVLEVBQUU7UUFDZCxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFDLEdBQUc7WUFDNUIsSUFBQSxvQkFBbUMsRUFBbEMsZ0JBQUssRUFBRSxzQkFBUSxDQUFvQjtZQUMxQyxRQUFRLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUU7Z0JBQzVCLEtBQUssYUFBYSxDQUFDLE1BQU07b0JBQ3ZCLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQztvQkFFakQsT0FBTztnQkFDVCxLQUFLLGFBQWEsQ0FBQyxPQUFPO29CQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDO29CQUU1RCxPQUFPO2dCQUNUO29CQUNFLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQztvQkFFdkQsT0FBTzthQUNWO1FBQ0gsQ0FBQyxDQUFDLENBQUM7S0FDSjtJQUVELE9BQU8sY0FBcUQsQ0FBQztBQUMvRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJRGljdGlvbmFyeX0gZnJvbSAnZGF0eC11dGlscyc7XG5cbmltcG9ydCB7UmVmZXJlbmNlVHlwZX0gZnJvbSAnLi4vZW51bXMvUmVmZXJlbmNlVHlwZSc7XG5pbXBvcnQge0RFQ09SQVRFX01PREVMfSBmcm9tICcuLi9lcnJvcnMnO1xuaW1wb3J0IHtlcnJvcn0gZnJvbSAnLi4vaGVscGVycy9mb3JtYXQnO1xuaW1wb3J0IHtpc01vZGVsfSBmcm9tICcuLi9oZWxwZXJzL21peGluJztcbmltcG9ydCB7SU1vZGVsQ29uc3RydWN0b3J9IGZyb20gJy4uL2ludGVyZmFjZXMvSU1vZGVsQ29uc3RydWN0b3InO1xuaW1wb3J0IHtJUmVmZXJlbmNlT3B0aW9uc30gZnJvbSAnLi4vaW50ZXJmYWNlcy9JUmVmZXJlbmNlT3B0aW9ucyc7XG5pbXBvcnQge0lUeXBlfSBmcm9tICcuLi9pbnRlcmZhY2VzL0lUeXBlJztcbmltcG9ydCBwcm9wIGZyb20gJy4uL3Byb3AnO1xuaW1wb3J0IHtQdXJlTW9kZWx9IGZyb20gJy4uL1B1cmVNb2RlbCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXR1cE1vZGVsPElNb2RlbCBleHRlbmRzIFB1cmVNb2RlbCwgSUZpZWxkcyBleHRlbmRzIElEaWN0aW9uYXJ5PihcbiAgQmFzZTogSU1vZGVsQ29uc3RydWN0b3I8SU1vZGVsPixcbiAge1xuICAgIGZpZWxkcyxcbiAgICByZWZlcmVuY2VzLFxuICAgIHR5cGUsXG4gICAgaWRBdHRyaWJ1dGUsXG4gICAgdHlwZUF0dHJpYnV0ZSxcbiAgfToge1xuICAgIGZpZWxkczogSUZpZWxkcztcbiAgICByZWZlcmVuY2VzPzogSURpY3Rpb25hcnk8SVJlZmVyZW5jZU9wdGlvbnM+O1xuICAgIHR5cGU/OiBJVHlwZTtcbiAgICBpZEF0dHJpYnV0ZT86IHN0cmluZztcbiAgICB0eXBlQXR0cmlidXRlPzogc3RyaW5nO1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tb2JqZWN0LWxpdGVyYWwtdHlwZS1hc3NlcnRpb25cbiAgfSA9IHtmaWVsZHM6IHt9IGFzIElGaWVsZHN9LFxuKSB7XG4gIGNvbnN0IEJhc2VDbGFzcyA9IEJhc2UgYXMgdHlwZW9mIFB1cmVNb2RlbDtcblxuICBpZiAoIWlzTW9kZWwoQmFzZUNsYXNzKSkge1xuICAgIHRocm93IGVycm9yKERFQ09SQVRFX01PREVMKTtcbiAgfVxuXG4gIGNsYXNzIE1vZGVsV2l0aFByb3BzIGV4dGVuZHMgQmFzZUNsYXNzIHt9XG5cbiAgaWYgKHR5cGUpIHtcbiAgICBNb2RlbFdpdGhQcm9wcy50eXBlID0gdHlwZTtcbiAgfVxuXG4gIGlmIChpZEF0dHJpYnV0ZSkge1xuICAgIHByb3AuaWRlbnRpZmllcihNb2RlbFdpdGhQcm9wcy5wcm90b3R5cGUsIGlkQXR0cmlidXRlKTtcbiAgfVxuXG4gIGlmICh0eXBlQXR0cmlidXRlKSB7XG4gICAgcHJvcC50eXBlKE1vZGVsV2l0aFByb3BzLnByb3RvdHlwZSwgdHlwZUF0dHJpYnV0ZSk7XG4gIH1cblxuICBpZiAoZmllbGRzKSB7XG4gICAgT2JqZWN0LmtleXMoZmllbGRzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIHByb3AuZGVmYXVsdFZhbHVlKGZpZWxkc1trZXldKShNb2RlbFdpdGhQcm9wcy5wcm90b3R5cGUsIGtleSk7XG4gICAgfSk7XG4gIH1cblxuICBpZiAocmVmZXJlbmNlcykge1xuICAgIE9iamVjdC5rZXlzKHJlZmVyZW5jZXMpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgY29uc3Qge21vZGVsLCBwcm9wZXJ0eX0gPSByZWZlcmVuY2VzW2tleV07XG4gICAgICBzd2l0Y2ggKHJlZmVyZW5jZXNba2V5XS50eXBlKSB7XG4gICAgICAgIGNhc2UgUmVmZXJlbmNlVHlwZS5UT19PTkU6XG4gICAgICAgICAgcHJvcC50b09uZShtb2RlbCkoTW9kZWxXaXRoUHJvcHMucHJvdG90eXBlLCBrZXkpO1xuXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjYXNlIFJlZmVyZW5jZVR5cGUuVE9fTUFOWTpcbiAgICAgICAgICBwcm9wLnRvTWFueShtb2RlbCwgcHJvcGVydHkpKE1vZGVsV2l0aFByb3BzLnByb3RvdHlwZSwga2V5KTtcblxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBwcm9wLnRvT25lT3JNYW55KG1vZGVsKShNb2RlbFdpdGhQcm9wcy5wcm90b3R5cGUsIGtleSk7XG5cbiAgICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gTW9kZWxXaXRoUHJvcHMgYXMgSU1vZGVsQ29uc3RydWN0b3I8SU1vZGVsICYgSUZpZWxkcz47XG59XG4iXX0=","dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx/mixins/setupModel.d.ts","text":"import { IDictionary } from 'datx-utils';\r\nimport { IModelConstructor } from '../interfaces/IModelConstructor';\r\nimport { IReferenceOptions } from '../interfaces/IReferenceOptions';\r\nimport { IType } from '../interfaces/IType';\r\nimport { PureModel } from '../PureModel';\r\nexport declare function setupModel<IModel extends PureModel, IFields extends IDictionary>(Base: IModelConstructor<IModel>, {fields, references, type, idAttribute, typeAttribute}?: {\r\n    fields: IFields;\r\n    references?: IDictionary<IReferenceOptions>;\r\n    type?: IType;\r\n    idAttribute?: string;\r\n    typeAttribute?: string;\r\n}): IModelConstructor<IModel & IFields>;\r\n"}}

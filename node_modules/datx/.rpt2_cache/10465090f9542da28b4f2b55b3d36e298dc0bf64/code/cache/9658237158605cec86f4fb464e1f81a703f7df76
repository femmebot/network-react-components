{"code":"import { PureCollection } from '../PureCollection';\r\nimport { PureModel } from '../PureModel';\r\nimport { View } from '../View';\r\nfunction isOfType(obj, type) {\r\n    var model = obj;\r\n    while (model) {\r\n        if (model === type) {\r\n            return true;\r\n        }\r\n        model = Object.getPrototypeOf(model);\r\n    }\r\n    return false;\r\n}\r\nexport function isModel(obj) {\r\n    return isOfType(obj, PureModel);\r\n}\r\nexport function isCollection(obj) {\r\n    return isOfType(obj, PureCollection);\r\n}\r\nexport function isView(obj) {\r\n    return isOfType(obj, View);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4aW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaGVscGVycy9taXhpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUN2QyxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sU0FBUyxDQUFDO0FBYTdCLGtCQUFxQixHQUFRLEVBQUUsSUFBTztJQUNwQyxJQUFJLEtBQUssR0FBRyxHQUFHLENBQUM7SUFDaEIsT0FBTyxLQUFLLEVBQUU7UUFDWixJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUU7WUFDbEIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELEtBQUssR0FBRyxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ3RDO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDO0FBV0QsTUFBTSxrQkFBa0IsR0FBUTtJQUM5QixPQUFPLFFBQVEsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDbEMsQ0FBQztBQVdELE1BQU0sdUJBQXVCLEdBQVE7SUFDbkMsT0FBTyxRQUFRLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0FBQ3ZDLENBQUM7QUFXRCxNQUFNLGlCQUFpQixHQUFRO0lBQzdCLE9BQU8sUUFBUSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUM3QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJQ29sbGVjdGlvbkNvbnN0cnVjdG9yfSBmcm9tICcuLi9pbnRlcmZhY2VzL0lDb2xsZWN0aW9uQ29uc3RydWN0b3InO1xuaW1wb3J0IHtJTW9kZWxDb25zdHJ1Y3Rvcn0gZnJvbSAnLi4vaW50ZXJmYWNlcy9JTW9kZWxDb25zdHJ1Y3Rvcic7XG5pbXBvcnQge0lWaWV3Q29uc3RydWN0b3J9IGZyb20gJy4uL2ludGVyZmFjZXMvSVZpZXdDb25zdHJ1Y3Rvcic7XG5pbXBvcnQge1B1cmVDb2xsZWN0aW9ufSBmcm9tICcuLi9QdXJlQ29sbGVjdGlvbic7XG5pbXBvcnQge1B1cmVNb2RlbH0gZnJvbSAnLi4vUHVyZU1vZGVsJztcbmltcG9ydCB7Vmlld30gZnJvbSAnLi4vVmlldyc7XG5cbi8qKlxuICogQ2hlY2sgaWYgYSBjbGFzcyBpcyBvZiBhIGNlcnRhaW4gdHlwZVxuICpcbiAqIEBleHBvcnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IG9iaiBDbGFzcyB0byBjaGVja1xuICogQHBhcmFtIHtGdW5jdGlvbn0gdHlwZSBUeXBlIHRvIGNoZWNrXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gQ2xhc3MgaXMgb2YgdGhlIGdpdmVuIHR5cGVcbiAqL1xuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmJhbi10eXBlc1xuZnVuY3Rpb24gaXNPZlR5cGU8VD4ob2JqOiBULCB0eXBlOiBUKTogdHJ1ZTtcbmZ1bmN0aW9uIGlzT2ZUeXBlPFQ+KG9iajogYW55LCB0eXBlOiBUKTogZmFsc2U7XG5mdW5jdGlvbiBpc09mVHlwZTxUPihvYmo6IGFueSwgdHlwZTogVCkge1xuICBsZXQgbW9kZWwgPSBvYmo7XG4gIHdoaWxlIChtb2RlbCkge1xuICAgIGlmIChtb2RlbCA9PT0gdHlwZSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIG1vZGVsID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG1vZGVsKTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSBjbGFzcyBpcyBhIG1vZGVsXG4gKlxuICogQGV4cG9ydFxuICogQHBhcmFtIHthbnl9IG9iaiBDbGFzcyB0byBjaGVja1xuICogQHJldHVybnMge2Jvb2xlYW59IENsYXNzIGlzIGEgbW9kZWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTW9kZWwob2JqOiB0eXBlb2YgUHVyZU1vZGVsfElNb2RlbENvbnN0cnVjdG9yPGFueT4pOiB0cnVlO1xuZXhwb3J0IGZ1bmN0aW9uIGlzTW9kZWwob2JqOiBhbnkpOiBmYWxzZTtcbmV4cG9ydCBmdW5jdGlvbiBpc01vZGVsKG9iajogYW55KSB7XG4gIHJldHVybiBpc09mVHlwZShvYmosIFB1cmVNb2RlbCk7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSBjbGFzcyBpcyBhIGNvbGxlY3Rpb25cbiAqXG4gKiBAZXhwb3J0XG4gKiBAcGFyYW0ge2FueX0gb2JqIENsYXNzIHRvIGNoZWNrXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gQ2xhc3MgaXMgYSBjb2xsZWN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0NvbGxlY3Rpb24ob2JqOiB0eXBlb2YgUHVyZUNvbGxlY3Rpb258SUNvbGxlY3Rpb25Db25zdHJ1Y3Rvcjxhbnk+KTogdHJ1ZTtcbmV4cG9ydCBmdW5jdGlvbiBpc0NvbGxlY3Rpb24ob2JqOiBhbnkpOiBmYWxzZTtcbmV4cG9ydCBmdW5jdGlvbiBpc0NvbGxlY3Rpb24ob2JqOiBhbnkpIHtcbiAgcmV0dXJuIGlzT2ZUeXBlKG9iaiwgUHVyZUNvbGxlY3Rpb24pO1xufVxuXG4vKipcbiAqIENoZWNrIGlmIGEgY2xhc3MgaXMgYSBjb2xsZWN0aW9uXG4gKlxuICogQGV4cG9ydFxuICogQHBhcmFtIHthbnl9IG9iaiBDbGFzcyB0byBjaGVja1xuICogQHJldHVybnMge2Jvb2xlYW59IENsYXNzIGlzIGEgY29sbGVjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNWaWV3KG9iajogdHlwZW9mIFZpZXd8SVZpZXdDb25zdHJ1Y3RvcjxhbnksIGFueT4pOiB0cnVlO1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmlldyhvYmo6IGFueSk6IGZhbHNlO1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmlldyhvYmo6IGFueSkge1xuICByZXR1cm4gaXNPZlR5cGUob2JqLCBWaWV3KTtcbn1cbiJdfQ==","map":{"mappings":""},"dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx/helpers/mixin.d.ts","text":"import { ICollectionConstructor } from '../interfaces/ICollectionConstructor';\r\nimport { IModelConstructor } from '../interfaces/IModelConstructor';\r\nimport { IViewConstructor } from '../interfaces/IViewConstructor';\r\nimport { PureCollection } from '../PureCollection';\r\nimport { PureModel } from '../PureModel';\r\nimport { View } from '../View';\r\n/**\r\n * Check if a class is a model\r\n *\r\n * @export\r\n * @param {any} obj Class to check\r\n * @returns {boolean} Class is a model\r\n */\r\nexport declare function isModel(obj: typeof PureModel | IModelConstructor<any>): true;\r\nexport declare function isModel(obj: any): false;\r\n/**\r\n * Check if a class is a collection\r\n *\r\n * @export\r\n * @param {any} obj Class to check\r\n * @returns {boolean} Class is a collection\r\n */\r\nexport declare function isCollection(obj: typeof PureCollection | ICollectionConstructor<any>): true;\r\nexport declare function isCollection(obj: any): false;\r\n/**\r\n * Check if a class is a collection\r\n *\r\n * @export\r\n * @param {any} obj Class to check\r\n * @returns {boolean} Class is a collection\r\n */\r\nexport declare function isView(obj: typeof View | IViewConstructor<any, any>): true;\r\nexport declare function isView(obj: any): false;\r\n"}}

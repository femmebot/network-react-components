{"code":"import { PureCollection } from '../PureCollection';\r\nimport { PureModel } from '../PureModel';\r\nimport { View } from '../View';\r\n/**\r\n * Check if a class is of a certain type\r\n *\r\n * @export\r\n * @param {Function} obj Class to check\r\n * @param {Function} type Type to check\r\n * @returns {boolean} Class is of the given type\r\n */\r\nfunction isOfType(obj, type) {\r\n    var model = obj;\r\n    while (model) {\r\n        if (model === type) {\r\n            return true;\r\n        }\r\n        model = Object.getPrototypeOf(model);\r\n    }\r\n    return false;\r\n}\r\nexport function isModel(obj) {\r\n    return isOfType(obj, PureModel);\r\n}\r\nexport function isCollection(obj) {\r\n    return isOfType(obj, PureCollection);\r\n}\r\nexport function isView(obj) {\r\n    return isOfType(obj, View);\r\n}\r\n","dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx/helpers/mixin.d.ts","text":"import { ICollectionConstructor } from '../interfaces/ICollectionConstructor';\r\nimport { IModelConstructor } from '../interfaces/IModelConstructor';\r\nimport { IViewConstructor } from '../interfaces/IViewConstructor';\r\nimport { PureCollection } from '../PureCollection';\r\nimport { PureModel } from '../PureModel';\r\nimport { View } from '../View';\r\n/**\r\n * Check if a class is a model\r\n *\r\n * @export\r\n * @param {any} obj Class to check\r\n * @returns {boolean} Class is a model\r\n */\r\nexport declare function isModel(obj: typeof PureModel | IModelConstructor<any>): true;\r\nexport declare function isModel(obj: any): false;\r\n/**\r\n * Check if a class is a collection\r\n *\r\n * @export\r\n * @param {any} obj Class to check\r\n * @returns {boolean} Class is a collection\r\n */\r\nexport declare function isCollection(obj: typeof PureCollection | ICollectionConstructor<any>): true;\r\nexport declare function isCollection(obj: any): false;\r\n/**\r\n * Check if a class is a collection\r\n *\r\n * @export\r\n * @param {any} obj Class to check\r\n * @returns {boolean} Class is a collection\r\n */\r\nexport declare function isView(obj: typeof View | IViewConstructor<any, any>): true;\r\nexport declare function isView(obj: any): false;\r\n"}}

{"code":"/**\r\n * Helper function used to iterate trough models prototype chain and collect data for all parents\r\n *\r\n * @export\r\n * @template T\r\n * @template U\r\n * @param {U} obj Given model\r\n * @param {(state: T, item: U) => T} reduceFn Function used to collect the data\r\n * @param {T} initialValue Initial reducer data\r\n * @returns {T} Collected data\r\n */\r\n// tslint:disable-next-line:export-name\r\nexport function reducePrototypeChain(obj, reduceFn, initialValue) {\r\n    var value = initialValue;\r\n    var model = obj;\r\n    while (model) {\r\n        value = reduceFn(value, model);\r\n        model = Object.getPrototypeOf(model);\r\n    }\r\n    return value;\r\n}\r\n","dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx/helpers/selectors.d.ts","text":"/**\r\n * Helper function used to iterate trough models prototype chain and collect data for all parents\r\n *\r\n * @export\r\n * @template T\r\n * @template U\r\n * @param {U} obj Given model\r\n * @param {(state: T, item: U) => T} reduceFn Function used to collect the data\r\n * @param {T} initialValue Initial reducer data\r\n * @returns {T} Collected data\r\n */\r\nexport declare function reducePrototypeChain<T, U>(obj: U, reduceFn: (state: T, item: U) => T, initialValue: T): T;\r\n"}}

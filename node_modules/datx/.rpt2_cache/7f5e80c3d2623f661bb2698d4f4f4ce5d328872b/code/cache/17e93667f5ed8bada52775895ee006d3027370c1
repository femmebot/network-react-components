{"code":"import { observable, set } from 'mobx';\r\nimport { MODEL_REQUIRED } from '../errors';\r\nimport { error } from '../helpers/format';\r\nimport { reducePrototypeChain } from '../helpers/selectors';\r\nvar DataStorage = /** @class */ (function () {\r\n    function DataStorage() {\r\n        this.modelData = new WeakMap();\r\n        this.modelClassData = new WeakMap();\r\n    }\r\n    DataStorage.prototype.initModel = function (model) {\r\n        var modelData = observable({ data: {}, meta: {} });\r\n        this.modelData.set(model, modelData);\r\n        return modelData;\r\n    };\r\n    DataStorage.prototype.getModelData = function (model) {\r\n        return this.__getModelData(model).data;\r\n    };\r\n    DataStorage.prototype.getModelDataKey = function (model, key) {\r\n        var modelData = this.__getModelData(model);\r\n        return modelData.data[key];\r\n    };\r\n    DataStorage.prototype.setModelData = function (model, data) {\r\n        var modelData = this.__getModelData(model);\r\n        set(modelData.data, data);\r\n    };\r\n    DataStorage.prototype.setModelDataKey = function (model, key, value) {\r\n        this.setModelData(model, (_a = {}, _a[key] = value, _a));\r\n        var _a;\r\n    };\r\n    DataStorage.prototype.getModelMeta = function (model) {\r\n        return this.modelData.get(model).meta;\r\n    };\r\n    DataStorage.prototype.getModelMetaKey = function (model, key) {\r\n        return this.getModelMeta(model)[key];\r\n    };\r\n    DataStorage.prototype.setModelMeta = function (model, meta) {\r\n        var modelData = this.__getModelData(model);\r\n        set(modelData.meta, meta);\r\n        return modelData.meta;\r\n    };\r\n    DataStorage.prototype.setModelMetaKey = function (model, key, value) {\r\n        this.setModelMeta(model, (_a = {}, _a[key] = value, _a));\r\n        var _a;\r\n    };\r\n    DataStorage.prototype.setModelClassMetaKey = function (model, key, value) {\r\n        var data = this.modelClassData.get(model);\r\n        Object.assign(data.meta, (_a = {}, _a[key] = value, _a));\r\n        var _a;\r\n    };\r\n    DataStorage.prototype.getModelClassMetaKey = function (obj, key) {\r\n        var _this = this;\r\n        return reducePrototypeChain(obj, function (value, model) {\r\n            return value || (_this.modelClassData.get(model) || { meta: {} }).meta[key] || null;\r\n        }, null);\r\n    };\r\n    DataStorage.prototype.addModelDefaultField = function (model, key, value) {\r\n        var data = this.modelClassData.get(model);\r\n        if (data) {\r\n            Object.assign(data.data, (_a = {}, _a[key] = value, _a));\r\n        }\r\n        else {\r\n            this.modelClassData.set(model, {\r\n                data: (_b = {}, _b[key] = value, _b),\r\n                meta: {},\r\n                references: {},\r\n            });\r\n        }\r\n        var _a, _b;\r\n    };\r\n    DataStorage.prototype.getModelDefaults = function (obj) {\r\n        var _this = this;\r\n        var defaults = reducePrototypeChain(obj, function (state, model) {\r\n            return state.concat((_this.modelClassData.get(model) || { data: [] }).data);\r\n        }, []);\r\n        return Object.assign.apply(Object, [{}].concat(defaults.reverse()));\r\n    };\r\n    DataStorage.prototype.addModelClassReference = function (model, key, options) {\r\n        if (!options.model && options.model !== 0) {\r\n            throw error(MODEL_REQUIRED);\r\n        }\r\n        var data = this.modelClassData.get(model);\r\n        if (data) {\r\n            Object.assign(data.references, (_a = {}, _a[key] = options, _a));\r\n        }\r\n        else {\r\n            this.modelClassData.set(model, {\r\n                data: {},\r\n                meta: {},\r\n                references: (_b = {}, _b[key] = options, _b),\r\n            });\r\n        }\r\n        var _a, _b;\r\n    };\r\n    DataStorage.prototype.getModelClassReferences = function (obj) {\r\n        var _this = this;\r\n        var defaults = reducePrototypeChain(obj, function (state, model) {\r\n            return state.concat((_this.modelClassData.get(model) || { references: {} }).references);\r\n        }, []);\r\n        return Object.assign.apply(Object, [{}].concat(defaults.reverse()));\r\n    };\r\n    DataStorage.prototype.getModelReferenceOptions = function (model, key) {\r\n        var refs = this.getModelMetaKey(model, 'refs');\r\n        return refs[key];\r\n    };\r\n    DataStorage.prototype.__getModelData = function (model) {\r\n        return this.modelData.get(model) || this.initModel(model);\r\n    };\r\n    // For testing purposes only\r\n    DataStorage.prototype.clear = function () {\r\n        this.modelData = new WeakMap();\r\n        this.modelClassData = new WeakMap();\r\n    };\r\n    return DataStorage;\r\n}());\r\nexport { DataStorage };\r\nexport var storage = new DataStorage();\r\n//# sourceMappingURL=storage.js.map","map":"{\"version\":3,\"file\":\"storage.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/services/storage.ts\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import {flatten, IDictionary, uniq} from 'datx-utils';\\nimport {IObservableArray, IObservableObject, observable, set, toJS} from 'mobx';\\n\\nimport {MODEL_REQUIRED} from '../errors';\\nimport {error} from '../helpers/format';\\nimport {getModelId, getModelType} from '../helpers/model/utils';\\nimport {reducePrototypeChain} from '../helpers/selectors';\\nimport {IDataStorage} from '../interfaces/IDataStorage';\\nimport {IIdentifier} from '../interfaces/IIdentifier';\\nimport {IReferenceOptions} from '../interfaces/IReferenceOptions';\\nimport {IType} from '../interfaces/IType';\\nimport {PureCollection} from '../PureCollection';\\nimport {PureModel} from '../PureModel';\\n\\ninterface IModelClassData {\\n  data: IDictionary;\\n  meta: IDictionary;\\n  references: IDictionary<IReferenceOptions>;\\n}\\n\\nexport class DataStorage {\\n  private modelData = new WeakMap<PureModel, IDataStorage>();\\n\\n  private modelClassData = new WeakMap<typeof PureModel|{type: IType}, IModelClassData>();\\n\\n  public initModel(model: PureModel) {\\n    const modelData = observable({data: {}, meta: {}});\\n    this.modelData.set(model, modelData);\\n\\n    return modelData;\\n  }\\n\\n  public getModelData(model: PureModel) {\\n    return this.__getModelData(model).data;\\n  }\\n\\n  public getModelDataKey(model: PureModel, key: string) {\\n    const modelData = this.__getModelData(model);\\n\\n    return modelData.data[key];\\n  }\\n\\n  public setModelData(model: PureModel, data: IDictionary) {\\n    const modelData = this.__getModelData(model);\\n    set(modelData.data, data);\\n  }\\n\\n  public setModelDataKey(model: PureModel, key: string, value?: any) {\\n    this.setModelData(model, {[key]: value});\\n  }\\n\\n  public getModelMeta(model: PureModel): IDictionary {\\n    return (this.modelData.get(model) as IDataStorage).meta;\\n  }\\n\\n  public getModelMetaKey(model: PureModel, key: string): any {\\n    return this.getModelMeta(model)[key];\\n  }\\n\\n  public setModelMeta(model: PureModel, meta: IDictionary) {\\n    const modelData = this.__getModelData(model);\\n    set(modelData.meta, meta);\\n\\n    return modelData.meta;\\n  }\\n\\n  public setModelMetaKey(model: PureModel, key: string, value?: any) {\\n    this.setModelMeta(model, {[key]: value});\\n  }\\n\\n  public setModelClassMetaKey(model: typeof PureModel, key: string, value?: any) {\\n    const data = this.modelClassData.get(model) as IModelClassData;\\n    Object.assign(data.meta, {[key]: value});\\n  }\\n\\n  public getModelClassMetaKey(obj: typeof PureModel, key: string): any {\\n    return reducePrototypeChain(obj, (value, model) => {\\n      return value || (this.modelClassData.get(model) || {meta: {}}).meta[key] || null;\\n    }, null);\\n  }\\n\\n  public addModelDefaultField(model: typeof PureModel, key: string, value?: any) {\\n    const data = this.modelClassData.get(model);\\n    if (data) {\\n      Object.assign(data.data, {[key]: value});\\n    } else {\\n      this.modelClassData.set(model, {\\n        data: {[key]: value},\\n        meta: {},\\n        references: {},\\n      });\\n    }\\n  }\\n\\n  public getModelDefaults(obj: typeof PureModel): IDictionary {\\n    const defaults = reducePrototypeChain(obj, (state, model) => {\\n      return state.concat((this.modelClassData.get(model) || {data: []}).data);\\n    }, [] as Array<IDictionary>);\\n\\n    return Object.assign({}, ...defaults.reverse());\\n  }\\n\\n  public addModelClassReference(model: typeof PureModel, key: string, options: IReferenceOptions) {\\n    if (!options.model && options.model !== 0) {\\n      throw error(MODEL_REQUIRED);\\n    }\\n\\n    const data = this.modelClassData.get(model);\\n    if (data) {\\n      Object.assign(data.references, {[key]: options});\\n    } else {\\n      this.modelClassData.set(model, {\\n        data: {},\\n        meta: {},\\n        references: {[key]: options},\\n      });\\n    }\\n  }\\n\\n  public getModelClassReferences(obj: typeof PureModel): IDictionary<IReferenceOptions> {\\n    const defaults = reducePrototypeChain(obj, (state, model) => {\\n      return state.concat((this.modelClassData.get(model) || {references: {}}).references);\\n    }, [] as Array<IDictionary>);\\n\\n    return Object.assign({}, ...defaults.reverse());\\n  }\\n\\n  public getModelReferenceOptions(model: PureModel, key: string): IReferenceOptions {\\n    const refs = this.getModelMetaKey(model, 'refs');\\n\\n    return refs[key];\\n  }\\n\\n  private __getModelData(model: PureModel): IDataStorage {\\n    return this.modelData.get(model) || this.initModel(model);\\n  }\\n\\n  // For testing purposes only\\n  private clear() {\\n    this.modelData = new WeakMap<PureModel, IDataStorage>();\\n    this.modelClassData = new WeakMap<typeof PureModel, IModelClassData>();\\n  }\\n}\\n\\nexport const storage = new DataStorage();\\n\"]}","dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx/services/storage.d.ts","text":"import { IDictionary } from 'datx-utils';\r\nimport { IObservableObject } from 'mobx';\r\nimport { IReferenceOptions } from '../interfaces/IReferenceOptions';\r\nimport { PureModel } from '../PureModel';\r\nexport declare class DataStorage {\r\n    private modelData;\r\n    private modelClassData;\r\n    initModel(model: PureModel): {\r\n        data: {};\r\n        meta: {};\r\n    } & IObservableObject;\r\n    getModelData(model: PureModel): IDictionary<any>;\r\n    getModelDataKey(model: PureModel, key: string): any;\r\n    setModelData(model: PureModel, data: IDictionary): void;\r\n    setModelDataKey(model: PureModel, key: string, value?: any): void;\r\n    getModelMeta(model: PureModel): IDictionary;\r\n    getModelMetaKey(model: PureModel, key: string): any;\r\n    setModelMeta(model: PureModel, meta: IDictionary): IDictionary<any>;\r\n    setModelMetaKey(model: PureModel, key: string, value?: any): void;\r\n    setModelClassMetaKey(model: typeof PureModel, key: string, value?: any): void;\r\n    getModelClassMetaKey(obj: typeof PureModel, key: string): any;\r\n    addModelDefaultField(model: typeof PureModel, key: string, value?: any): void;\r\n    getModelDefaults(obj: typeof PureModel): IDictionary;\r\n    addModelClassReference(model: typeof PureModel, key: string, options: IReferenceOptions): void;\r\n    getModelClassReferences(obj: typeof PureModel): IDictionary<IReferenceOptions>;\r\n    getModelReferenceOptions(model: PureModel, key: string): IReferenceOptions;\r\n    private __getModelData(model);\r\n    private clear();\r\n}\r\nexport declare const storage: DataStorage;\r\n"}}

{"code":"/**\r\n * Helper function used to iterate trough models prototype chain and collect data for all parents\r\n *\r\n * @export\r\n * @template T\r\n * @template U\r\n * @param {U} obj Given model\r\n * @param {(state: T, item: U) => T} reduceFn Function used to collect the data\r\n * @param {T} initialValue Initial reducer data\r\n * @returns {T} Collected data\r\n */\r\n// tslint:disable-next-line:export-name\r\nexport function reducePrototypeChain(obj, reduceFn, initialValue) {\r\n    var value = initialValue;\r\n    var model = obj;\r\n    while (model) {\r\n        value = reduceFn(value, model);\r\n        model = Object.getPrototypeOf(model);\r\n    }\r\n    return value;\r\n}\r\n//# sourceMappingURL=selectors.js.map","map":"{\"version\":3,\"file\":\"selectors.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/helpers/selectors.ts\"],\"names\":[],\"mappings\":\"AAMA;;;;;;;;;;GAUG;AACH,uCAAuC;AACvC,MAAM,+BAAqC,GAAM,EAAE,QAAkC,EAAE,YAAe;IACpG,IAAI,KAAK,GAAG,YAAY,CAAC;IACzB,IAAI,KAAK,GAAG,GAAG,CAAC;IAChB,OAAO,KAAK,EAAE;QACZ,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC/B,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KACtC;IAED,OAAO,KAAK,CAAC;AACf,CAAC\",\"sourcesContent\":[\"import {IDictionary} from 'datx-utils';\\n\\nimport {PureCollection} from '../PureCollection';\\nimport {PureModel} from '../PureModel';\\nimport {getModelId, getModelType} from './model/utils';\\n\\n/**\\n * Helper function used to iterate trough models prototype chain and collect data for all parents\\n *\\n * @export\\n * @template T\\n * @template U\\n * @param {U} obj Given model\\n * @param {(state: T, item: U) => T} reduceFn Function used to collect the data\\n * @param {T} initialValue Initial reducer data\\n * @returns {T} Collected data\\n */\\n// tslint:disable-next-line:export-name\\nexport function reducePrototypeChain<T, U>(obj: U, reduceFn: (state: T, item: U) => T, initialValue: T): T {\\n  let value = initialValue;\\n  let model = obj;\\n  while (model) {\\n    value = reduceFn(value, model);\\n    model = Object.getPrototypeOf(model);\\n  }\\n\\n  return value;\\n}\\n\"]}","dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx/helpers/selectors.d.ts","text":"/**\r\n * Helper function used to iterate trough models prototype chain and collect data for all parents\r\n *\r\n * @export\r\n * @template T\r\n * @template U\r\n * @param {U} obj Given model\r\n * @param {(state: T, item: U) => T} reduceFn Function used to collect the data\r\n * @param {T} initialValue Initial reducer data\r\n * @returns {T} Collected data\r\n */\r\nexport declare function reducePrototypeChain<T, U>(obj: U, reduceFn: (state: T, item: U) => T, initialValue: T): T;\r\n"}}

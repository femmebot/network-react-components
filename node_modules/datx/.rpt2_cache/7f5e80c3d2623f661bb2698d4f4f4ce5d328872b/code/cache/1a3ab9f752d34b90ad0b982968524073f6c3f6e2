{"code":"import * as tslib_1 from \"tslib\";\r\nimport { assignComputed, deprecated } from 'datx-utils';\r\nimport { Collection } from './Collection';\r\nimport { CompatModel } from './CompatModel';\r\nimport { getModelType } from './helpers/model/utils';\r\nvar CompatCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CompatCollection, _super);\r\n    function CompatCollection(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        deprecated('CompatCollection is just a migration tool. Please move to Collection as soon as possible.');\r\n        var getters = {};\r\n        _this.static.types.forEach(function (model) {\r\n            var type = getModelType(model);\r\n            assignComputed(_this, type.toString(), function () { return _this.findAll(type); });\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CompatCollection.prototype, \"static\", {\r\n        get: function () {\r\n            deprecated('collection.static is deprecated.');\r\n            return this.constructor;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompatCollection.prototype.toJS = function () {\r\n        deprecated('collection.toJS() is deprecated. Use collection.toJSON() instead');\r\n        return this.toJSON();\r\n    };\r\n    CompatCollection.types = [CompatModel];\r\n    return CompatCollection;\r\n}(Collection));\r\nexport { CompatCollection };\r\n//# sourceMappingURL=CompatCollection.js.map","map":"{\"version\":3,\"file\":\"CompatCollection.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/CompatCollection.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAC,cAAc,EAAE,UAAU,EAAY,MAAM,YAAY,CAAC;AAGjE,OAAO,EAAC,UAAU,EAAC,MAAM,cAAc,CAAC;AACxC,OAAO,EAAC,WAAW,EAAC,MAAM,eAAe,CAAC;AAC1C,OAAO,EAAC,YAAY,EAAC,MAAM,uBAAuB,CAAC;AAGnD;IAAsC,4CAAU;IAG9C,0BAAY,IAAK;QAAjB,YACE,kBAAM,IAAI,CAAC,SAUZ;QARC,UAAU,CAAC,2FAA2F,CAAC,CAAC;QAExG,IAAM,OAAO,GAAG,EAAE,CAAC;QAEnB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,KAAK;YAC9B,IAAM,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;YACjC,cAAc,CAAC,KAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAlB,CAAkB,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;;IACL,CAAC;IAED,sBAAW,oCAAM;aAAjB;YACE,UAAU,CAAC,kCAAkC,CAAC,CAAC;YAE/C,OAAO,IAAI,CAAC,WAAsC,CAAC;QACrD,CAAC;;;OAAA;IAEM,+BAAI,GAAX;QACE,UAAU,CAAC,kEAAkE,CAAC,CAAC;QAE/E,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC;IAzBa,sBAAK,GAAG,CAAC,WAAW,CAAC,CAAC;IA0BtC,uBAAC;CAAA,AA3BD,CAAsC,UAAU,GA2B/C;SA3BY,gBAAgB\",\"sourcesContent\":[\"import {assignComputed, deprecated, IRawModel} from 'datx-utils';\\nimport {computed, decorate, extendObservable} from 'mobx';\\n\\nimport {Collection} from './Collection';\\nimport {CompatModel} from './CompatModel';\\nimport {getModelType} from './helpers/model/utils';\\nimport {IRawCollection} from './interfaces/IRawCollection';\\n\\nexport class CompatCollection extends Collection {\\n  public static types = [CompatModel];\\n\\n  constructor(data?) {\\n    super(data);\\n\\n    deprecated('CompatCollection is just a migration tool. Please move to Collection as soon as possible.');\\n\\n    const getters = {};\\n\\n    this.static.types.forEach((model) => {\\n      const type = getModelType(model);\\n      assignComputed(this, type.toString(), () => this.findAll(type));\\n    });\\n  }\\n\\n  public get static(): typeof CompatCollection {\\n    deprecated('collection.static is deprecated.');\\n\\n    return this.constructor as typeof CompatCollection;\\n  }\\n\\n  public toJS(): IRawCollection {\\n    deprecated('collection.toJS() is deprecated. Use collection.toJSON() instead');\\n\\n    return this.toJSON();\\n  }\\n}\\n\"]}","dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx/CompatCollection.d.ts","text":"import { Collection } from './Collection';\r\nimport { CompatModel } from './CompatModel';\r\nimport { IRawCollection } from './interfaces/IRawCollection';\r\nexport declare class CompatCollection extends Collection {\r\n    static types: (typeof CompatModel)[];\r\n    constructor(data?: any);\r\n    readonly static: typeof CompatCollection;\r\n    toJS(): IRawCollection;\r\n}\r\n"}}

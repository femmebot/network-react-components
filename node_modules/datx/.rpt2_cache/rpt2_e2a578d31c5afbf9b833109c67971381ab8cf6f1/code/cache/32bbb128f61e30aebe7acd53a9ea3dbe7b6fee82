{"map":"{\"version\":3,\"file\":\"PureModel.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/PureModel.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAC,YAAY,EAAyB,MAAM,YAAY,CAAC;AAChE,OAAO,EAAC,gBAAgB,EAAC,MAAM,MAAM,CAAC;AAEtC,OAAO,EAAC,SAAS,EAAC,MAAM,sBAAsB,CAAC;AAK/C,gDAAgD;AAChD;IAiDE,mBAAY,OAAuB,EAAE,UAA2B;QAApD,wBAAA,EAAA,YAAuB;QACjC,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC3B,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IACvC,CAAC;IA/BD;;;;;;;;OAQG;IACW,oBAAU,GAAxB,UAAyB,IAAY,EAAE,WAA4B;QACjE,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;OAMG;IACW,mBAAS,GAAvB;QACE,OAAO,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IACtF,CAAC;IAEa,gBAAM,GAApB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IA9CD;;;;;;OAMG;IACW,cAAI,GAAU,YAAY,CAAC;IAEzC;;;;;;OAMG;IACW,qBAAW,GAAgB,CAAC,CAAC;IAE7B,sBAAY,GAAY,IAAI,CAAC;IAkC7C,gBAAC;CAAA,AArDD,IAqDC;SArDY,SAAS\",\"sourcesContent\":[\"import {DEFAULT_TYPE, IDictionary, IRawModel} from 'datx-utils';\\nimport {extendObservable} from 'mobx';\\n\\nimport {initModel} from './helpers/model/init';\\nimport {IIdentifier} from './interfaces/IIdentifier';\\nimport {IType} from './interfaces/IType';\\nimport {PureCollection} from './PureCollection';\\n\\n// tslint:disable-next-line:no-unnecessary-class\\nexport class PureModel {\\n  /**\\n   * Model type used for serialization\\n   *\\n   * @static\\n   * @type {IType}\\n   * @memberof Model\\n   */\\n  public static type: IType = DEFAULT_TYPE;\\n\\n  /**\\n   * Current autoincrement value used for automatic id generation\\n   *\\n   * @static\\n   * @type {IIdentifier}\\n   * @memberof Model\\n   */\\n  public static autoIdValue: IIdentifier = 0;\\n\\n  public static enableAutoId: boolean = true;\\n\\n  /**\\n   * Function used to preprocess the model input data. Called during the model initialization\\n   *\\n   * @static\\n   * @param {object} data Input data\\n   * @param {PureCollection} [collection] The collection the new model will belong to\\n   * @returns Target model data\\n   * @memberof Model\\n   */\\n  public static preprocess(data: object, _collection?: PureCollection) {\\n    return data;\\n  }\\n\\n  /**\\n   * Method used for generating of automatic model ids\\n   *\\n   * @static\\n   * @returns {IIdentifier} A new model id\\n   * @memberof Model\\n   */\\n  public static getAutoId(): IIdentifier {\\n    return typeof this.autoIdValue === 'number' ? --this.autoIdValue : this.autoIdValue;\\n  }\\n\\n  public static toJSON() {\\n    return this.type;\\n  }\\n\\n  constructor(rawData: IRawModel = {}, collection?: PureCollection) {\\n    extendObservable(this, {});\\n    initModel(this, rawData, collection);\\n  }\\n}\\n\"]}","code":"import { DEFAULT_TYPE } from 'datx-utils';\r\nimport { extendObservable } from 'mobx';\r\nimport { initModel } from './helpers/model/init';\r\n// tslint:disable-next-line:no-unnecessary-class\r\nvar PureModel = /** @class */ (function () {\r\n    function PureModel(rawData, collection) {\r\n        if (rawData === void 0) { rawData = {}; }\r\n        extendObservable(this, {});\r\n        initModel(this, rawData, collection);\r\n    }\r\n    /**\r\n     * Function used to preprocess the model input data. Called during the model initialization\r\n     *\r\n     * @static\r\n     * @param {object} data Input data\r\n     * @param {PureCollection} [collection] The collection the new model will belong to\r\n     * @returns Target model data\r\n     * @memberof Model\r\n     */\r\n    PureModel.preprocess = function (data, _collection) {\r\n        return data;\r\n    };\r\n    /**\r\n     * Method used for generating of automatic model ids\r\n     *\r\n     * @static\r\n     * @returns {IIdentifier} A new model id\r\n     * @memberof Model\r\n     */\r\n    PureModel.getAutoId = function () {\r\n        return typeof this.autoIdValue === 'number' ? --this.autoIdValue : this.autoIdValue;\r\n    };\r\n    PureModel.toJSON = function () {\r\n        return this.type;\r\n    };\r\n    /**\r\n     * Model type used for serialization\r\n     *\r\n     * @static\r\n     * @type {IType}\r\n     * @memberof Model\r\n     */\r\n    PureModel.type = DEFAULT_TYPE;\r\n    /**\r\n     * Current autoincrement value used for automatic id generation\r\n     *\r\n     * @static\r\n     * @type {IIdentifier}\r\n     * @memberof Model\r\n     */\r\n    PureModel.autoIdValue = 0;\r\n    PureModel.enableAutoId = true;\r\n    return PureModel;\r\n}());\r\nexport { PureModel };\r\n//# sourceMappingURL=PureModel.js.map","dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx/PureModel.d.ts","text":"import { IRawModel } from 'datx-utils';\r\nimport { IIdentifier } from './interfaces/IIdentifier';\r\nimport { IType } from './interfaces/IType';\r\nimport { PureCollection } from './PureCollection';\r\nexport declare class PureModel {\r\n    /**\r\n     * Model type used for serialization\r\n     *\r\n     * @static\r\n     * @type {IType}\r\n     * @memberof Model\r\n     */\r\n    static type: IType;\r\n    /**\r\n     * Current autoincrement value used for automatic id generation\r\n     *\r\n     * @static\r\n     * @type {IIdentifier}\r\n     * @memberof Model\r\n     */\r\n    static autoIdValue: IIdentifier;\r\n    static enableAutoId: boolean;\r\n    /**\r\n     * Function used to preprocess the model input data. Called during the model initialization\r\n     *\r\n     * @static\r\n     * @param {object} data Input data\r\n     * @param {PureCollection} [collection] The collection the new model will belong to\r\n     * @returns Target model data\r\n     * @memberof Model\r\n     */\r\n    static preprocess(data: object, _collection?: PureCollection): object;\r\n    /**\r\n     * Method used for generating of automatic model ids\r\n     *\r\n     * @static\r\n     * @returns {IIdentifier} A new model id\r\n     * @memberof Model\r\n     */\r\n    static getAutoId(): IIdentifier;\r\n    static toJSON(): IType;\r\n    constructor(rawData?: IRawModel, collection?: PureCollection);\r\n}\r\n"}}

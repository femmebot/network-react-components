{"code":"import { observable, set } from 'mobx';\r\nimport { MODEL_REQUIRED } from '../errors';\r\nimport { error } from '../helpers/format';\r\nimport { reducePrototypeChain } from '../helpers/selectors';\r\nvar DataStorage = /** @class */ (function () {\r\n    function DataStorage() {\r\n        this.modelData = new WeakMap();\r\n        this.modelClassData = new WeakMap();\r\n    }\r\n    DataStorage.prototype.initModel = function (model) {\r\n        var modelData = observable({ data: {}, meta: {} });\r\n        this.modelData.set(model, modelData);\r\n        return modelData;\r\n    };\r\n    DataStorage.prototype.getModelData = function (model) {\r\n        return this.__getModelData(model).data;\r\n    };\r\n    DataStorage.prototype.getModelDataKey = function (model, key) {\r\n        var modelData = this.__getModelData(model);\r\n        return modelData.data[key];\r\n    };\r\n    DataStorage.prototype.setModelData = function (model, data) {\r\n        var modelData = this.__getModelData(model);\r\n        set(modelData.data, data);\r\n    };\r\n    DataStorage.prototype.setModelDataKey = function (model, key, value) {\r\n        this.setModelData(model, (_a = {}, _a[key] = value, _a));\r\n        var _a;\r\n    };\r\n    DataStorage.prototype.getModelMeta = function (model) {\r\n        return this.modelData.get(model).meta;\r\n    };\r\n    DataStorage.prototype.getModelMetaKey = function (model, key) {\r\n        return this.getModelMeta(model)[key];\r\n    };\r\n    DataStorage.prototype.setModelMeta = function (model, meta) {\r\n        var modelData = this.__getModelData(model);\r\n        set(modelData.meta, meta);\r\n        return modelData.meta;\r\n    };\r\n    DataStorage.prototype.setModelMetaKey = function (model, key, value) {\r\n        this.setModelMeta(model, (_a = {}, _a[key] = value, _a));\r\n        var _a;\r\n    };\r\n    DataStorage.prototype.setModelClassMetaKey = function (model, key, value) {\r\n        var data = this.modelClassData.get(model);\r\n        Object.assign(data.meta, (_a = {}, _a[key] = value, _a));\r\n        var _a;\r\n    };\r\n    DataStorage.prototype.getModelClassMetaKey = function (obj, key) {\r\n        var _this = this;\r\n        return reducePrototypeChain(obj, function (value, model) {\r\n            return value || (_this.modelClassData.get(model) || { meta: {} }).meta[key] || null;\r\n        }, null);\r\n    };\r\n    DataStorage.prototype.addModelDefaultField = function (model, key, value) {\r\n        var data = this.modelClassData.get(model);\r\n        if (data) {\r\n            Object.assign(data.data, (_a = {}, _a[key] = value, _a));\r\n        }\r\n        else {\r\n            this.modelClassData.set(model, {\r\n                data: (_b = {}, _b[key] = value, _b),\r\n                meta: {},\r\n                references: {},\r\n            });\r\n        }\r\n        var _a, _b;\r\n    };\r\n    DataStorage.prototype.getModelDefaults = function (obj) {\r\n        var _this = this;\r\n        var defaults = reducePrototypeChain(obj, function (state, model) {\r\n            return state.concat((_this.modelClassData.get(model) || { data: [] }).data);\r\n        }, []);\r\n        return Object.assign.apply(Object, [{}].concat(defaults.reverse()));\r\n    };\r\n    DataStorage.prototype.addModelClassReference = function (model, key, options) {\r\n        if (!options.model && options.model !== 0) {\r\n            throw error(MODEL_REQUIRED);\r\n        }\r\n        var data = this.modelClassData.get(model);\r\n        if (data) {\r\n            Object.assign(data.references, (_a = {}, _a[key] = options, _a));\r\n        }\r\n        else {\r\n            this.modelClassData.set(model, {\r\n                data: {},\r\n                meta: {},\r\n                references: (_b = {}, _b[key] = options, _b),\r\n            });\r\n        }\r\n        var _a, _b;\r\n    };\r\n    DataStorage.prototype.getModelClassReferences = function (obj) {\r\n        var _this = this;\r\n        var defaults = reducePrototypeChain(obj, function (state, model) {\r\n            return state.concat((_this.modelClassData.get(model) || { references: {} }).references);\r\n        }, []);\r\n        return Object.assign.apply(Object, [{}].concat(defaults.reverse()));\r\n    };\r\n    DataStorage.prototype.getModelReferenceOptions = function (model, key) {\r\n        var refs = this.getModelMetaKey(model, 'refs');\r\n        return refs[key];\r\n    };\r\n    DataStorage.prototype.__getModelData = function (model) {\r\n        return this.modelData.get(model) || this.initModel(model);\r\n    };\r\n    // For testing purposes only\r\n    DataStorage.prototype.clear = function () {\r\n        this.modelData = new WeakMap();\r\n        this.modelClassData = new WeakMap();\r\n    };\r\n    return DataStorage;\r\n}());\r\nexport { DataStorage };\r\nexport var storage = new DataStorage();\r\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":""},"dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx/services/storage.d.ts","text":"import { IDictionary } from 'datx-utils';\r\nimport { IObservableObject } from 'mobx';\r\nimport { IReferenceOptions } from '../interfaces/IReferenceOptions';\r\nimport { PureModel } from '../PureModel';\r\nexport declare class DataStorage {\r\n    private modelData;\r\n    private modelClassData;\r\n    initModel(model: PureModel): {\r\n        data: {};\r\n        meta: {};\r\n    } & IObservableObject;\r\n    getModelData(model: PureModel): IDictionary<any>;\r\n    getModelDataKey(model: PureModel, key: string): any;\r\n    setModelData(model: PureModel, data: IDictionary<any>): void;\r\n    setModelDataKey(model: PureModel, key: string, value?: any): void;\r\n    getModelMeta(model: PureModel): IDictionary<any>;\r\n    getModelMetaKey(model: PureModel, key: string): any;\r\n    setModelMeta(model: PureModel, meta: IDictionary<any>): IDictionary<any>;\r\n    setModelMetaKey(model: PureModel, key: string, value?: any): void;\r\n    setModelClassMetaKey(model: typeof PureModel, key: string, value?: any): void;\r\n    getModelClassMetaKey(obj: typeof PureModel, key: string): any;\r\n    addModelDefaultField(model: typeof PureModel, key: string, value?: any): void;\r\n    getModelDefaults(obj: typeof PureModel): IDictionary<any>;\r\n    addModelClassReference(model: typeof PureModel, key: string, options: IReferenceOptions): void;\r\n    getModelClassReferences(obj: typeof PureModel): IDictionary<IReferenceOptions>;\r\n    getModelReferenceOptions(model: PureModel, key: string): IReferenceOptions;\r\n    private __getModelData(model);\r\n    private clear();\r\n}\r\nexport declare const storage: DataStorage;\r\n"}}

{"code":"import * as tslib_1 from \"tslib\";\r\nimport { DECORATE_MODEL } from '../errors';\r\nimport { error } from '../helpers/format';\r\nimport { isModel } from '../helpers/mixin';\r\nimport { initModelRef } from '../helpers/model/init';\r\nimport { assignModel, cloneModel, modelToJSON, updateModel } from '../helpers/model/utils';\r\n/**\r\n * Extends the model with some handy actions\r\n *\r\n * @export\r\n * @template T\r\n * @param {IModelConstructor<T>} Base Model to extend\r\n * @returns Extended model\r\n */\r\nexport function withActions(Base) {\r\n    var BaseClass = Base;\r\n    if (!isModel(Base)) {\r\n        throw error(DECORATE_MODEL);\r\n    }\r\n    var WithActions = /** @class */ (function (_super) {\r\n        tslib_1.__extends(WithActions, _super);\r\n        function WithActions() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        WithActions.prototype.update = function (data) {\r\n            updateModel(this, data);\r\n        };\r\n        WithActions.prototype.clone = function () {\r\n            // @ts-ignore\r\n            return cloneModel(this);\r\n        };\r\n        WithActions.prototype.assign = function (key, value) {\r\n            assignModel(this, key, value);\r\n        };\r\n        WithActions.prototype.addReference = function (key, value, options) {\r\n            initModelRef(this, key, options, value);\r\n        };\r\n        WithActions.prototype.toJSON = function () {\r\n            return modelToJSON(this);\r\n        };\r\n        return WithActions;\r\n    }(BaseClass));\r\n    return WithActions;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2l0aEFjdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbWl4aW5zL3dpdGhBY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxLQUFLLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUN4QyxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFDekMsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ25ELE9BQU8sRUFBQyxXQUFXLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQU96Rjs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxzQkFBMkMsSUFBMEI7SUFDekUsSUFBTSxTQUFTLEdBQUcsSUFBd0IsQ0FBQztJQUUzQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkIsTUFBTSxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVEO1FBQTBCLHVDQUFTO1FBQW5DOztRQXlCQSxDQUFDO1FBeEJRLDRCQUFNLEdBQWIsVUFBYyxJQUFzQjtZQUNsQyxXQUFXLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzFCLENBQUM7UUFFTSwyQkFBSyxHQUFaO1lBQ0UsYUFBYTtZQUNiLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQztRQUVNLDRCQUFNLEdBQWIsVUFBYyxHQUFXLEVBQUUsS0FBVTtZQUNuQyxXQUFXLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNoQyxDQUFDO1FBRU0sa0NBQVksR0FBbkIsVUFDRSxHQUFXLEVBQ1gsS0FBbUIsRUFDbkIsT0FBNkI7WUFFN0IsWUFBWSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzFDLENBQUM7UUFFTSw0QkFBTSxHQUFiO1lBQ0UsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQixDQUFDO1FBQ0gsa0JBQUM7SUFBRCxDQUFDLEFBekJELENBQTBCLFNBQVMsR0F5QmxDO0lBRUQsTUFBTSxDQUFDLFdBQXNELENBQUM7QUFDaEUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SURpY3Rpb25hcnl9IGZyb20gJ2RhdHgtdXRpbHMnO1xuXG5pbXBvcnQge0RFQ09SQVRFX01PREVMfSBmcm9tICcuLi9lcnJvcnMnO1xuaW1wb3J0IHtlcnJvcn0gZnJvbSAnLi4vaGVscGVycy9mb3JtYXQnO1xuaW1wb3J0IHtpc01vZGVsfSBmcm9tICcuLi9oZWxwZXJzL21peGluJztcbmltcG9ydCB7aW5pdE1vZGVsUmVmfSBmcm9tICcuLi9oZWxwZXJzL21vZGVsL2luaXQnO1xuaW1wb3J0IHthc3NpZ25Nb2RlbCwgY2xvbmVNb2RlbCwgbW9kZWxUb0pTT04sIHVwZGF0ZU1vZGVsfSBmcm9tICcuLi9oZWxwZXJzL21vZGVsL3V0aWxzJztcbmltcG9ydCB7SUFjdGlvbnNNaXhpbn0gZnJvbSAnLi4vaW50ZXJmYWNlcy9JQWN0aW9uc01peGluJztcbmltcG9ydCB7SU1vZGVsQ29uc3RydWN0b3J9IGZyb20gJy4uL2ludGVyZmFjZXMvSU1vZGVsQ29uc3RydWN0b3InO1xuaW1wb3J0IHtJUmVmZXJlbmNlT3B0aW9uc30gZnJvbSAnLi4vaW50ZXJmYWNlcy9JUmVmZXJlbmNlT3B0aW9ucyc7XG5pbXBvcnQge1RSZWZWYWx1ZX0gZnJvbSAnLi4vaW50ZXJmYWNlcy9UUmVmVmFsdWUnO1xuaW1wb3J0IHtQdXJlTW9kZWx9IGZyb20gJy4uL1B1cmVNb2RlbCc7XG5cbi8qKlxuICogRXh0ZW5kcyB0aGUgbW9kZWwgd2l0aCBzb21lIGhhbmR5IGFjdGlvbnNcbiAqXG4gKiBAZXhwb3J0XG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtJTW9kZWxDb25zdHJ1Y3RvcjxUPn0gQmFzZSBNb2RlbCB0byBleHRlbmRcbiAqIEByZXR1cm5zIEV4dGVuZGVkIG1vZGVsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3aXRoQWN0aW9uczxUIGV4dGVuZHMgUHVyZU1vZGVsPihCYXNlOiBJTW9kZWxDb25zdHJ1Y3RvcjxUPikge1xuICBjb25zdCBCYXNlQ2xhc3MgPSBCYXNlIGFzIHR5cGVvZiBQdXJlTW9kZWw7XG5cbiAgaWYgKCFpc01vZGVsKEJhc2UpKSB7XG4gICAgdGhyb3cgZXJyb3IoREVDT1JBVEVfTU9ERUwpO1xuICB9XG5cbiAgY2xhc3MgV2l0aEFjdGlvbnMgZXh0ZW5kcyBCYXNlQ2xhc3MgaW1wbGVtZW50cyBJQWN0aW9uc01peGluPFQ+IHtcbiAgICBwdWJsaWMgdXBkYXRlKGRhdGE6IElEaWN0aW9uYXJ5PGFueT4pIHtcbiAgICAgIHVwZGF0ZU1vZGVsKHRoaXMsIGRhdGEpO1xuICAgIH1cblxuICAgIHB1YmxpYyBjbG9uZSgpOiBJQWN0aW9uc01peGluPFQ+ICYgVCB7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICByZXR1cm4gY2xvbmVNb2RlbCh0aGlzKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXNzaWduKGtleTogc3RyaW5nLCB2YWx1ZTogYW55KSB7XG4gICAgICBhc3NpZ25Nb2RlbCh0aGlzLCBrZXksIHZhbHVlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkUmVmZXJlbmNlPFYgZXh0ZW5kcyBQdXJlTW9kZWwsIFUgZXh0ZW5kcyB0eXBlb2YgUHVyZU1vZGVsPihcbiAgICAgIGtleTogc3RyaW5nLFxuICAgICAgdmFsdWU6IFRSZWZWYWx1ZTxWPixcbiAgICAgIG9wdGlvbnM6IElSZWZlcmVuY2VPcHRpb25zPFU+LFxuICAgICkge1xuICAgICAgaW5pdE1vZGVsUmVmKHRoaXMsIGtleSwgb3B0aW9ucywgdmFsdWUpO1xuICAgIH1cblxuICAgIHB1YmxpYyB0b0pTT04oKSB7XG4gICAgICByZXR1cm4gbW9kZWxUb0pTT04odGhpcyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIFdpdGhBY3Rpb25zIGFzIElNb2RlbENvbnN0cnVjdG9yPElBY3Rpb25zTWl4aW48VD4gJiBUPjtcbn1cbiJdfQ==","map":{"mappings":""},"dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx/mixins/withActions.d.ts","text":"import { IActionsMixin } from '../interfaces/IActionsMixin';\r\nimport { IModelConstructor } from '../interfaces/IModelConstructor';\r\nimport { PureModel } from '../PureModel';\r\n/**\r\n * Extends the model with some handy actions\r\n *\r\n * @export\r\n * @template T\r\n * @param {IModelConstructor<T>} Base Model to extend\r\n * @returns Extended model\r\n */\r\nexport declare function withActions<T extends PureModel>(Base: IModelConstructor<T>): IModelConstructor<IActionsMixin<T> & T>;\r\n"}}

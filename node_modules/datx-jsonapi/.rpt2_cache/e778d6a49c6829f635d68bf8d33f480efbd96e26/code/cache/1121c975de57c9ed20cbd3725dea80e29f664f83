{"code":"import * as tslib_1 from \"tslib\";\r\nimport { flattenModel, removeModel, saveModel } from './helpers/model';\r\nexport function decorateModel(BaseClass) {\r\n    var JsonapiModel = /** @class */ (function (_super) {\r\n        tslib_1.__extends(JsonapiModel, _super);\r\n        function JsonapiModel(rawData, collection) {\r\n            if (rawData === void 0) { rawData = {}; }\r\n            var _this = this;\r\n            var data = rawData;\r\n            if ('type' in rawData && ('attributes' in rawData || 'relationships' in rawData)) {\r\n                data = flattenModel(rawData);\r\n            }\r\n            _this = _super.call(this, data, collection) || this;\r\n            return _this;\r\n        }\r\n        JsonapiModel.prototype.save = function (options) {\r\n            return saveModel(this, options);\r\n        };\r\n        JsonapiModel.prototype.destroy = function (options) {\r\n            return removeModel(this, options);\r\n        };\r\n        /**\r\n         * Should the autogenerated ID be sent to the server when creating a record\r\n         *\r\n         * @static\r\n         * @type {boolean}\r\n         * @memberOf Record\r\n         */\r\n        JsonapiModel.useAutogeneratedIds = BaseClass['useAutogeneratedIds'] || false;\r\n        return JsonapiModel;\r\n    }(BaseClass));\r\n    return JsonapiModel;\r\n}\r\n//# sourceMappingURL=decorateModel.js.map","map":"{\"version\":3,\"file\":\"decorateModel.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/decorateModel.ts\"],\"names\":[],\"mappings\":\";AAGA,OAAO,EAAC,YAAY,EAAE,WAAW,EAAE,SAAS,EAAC,MAAM,iBAAiB,CAAC;AAIrE,MAAM,wBAAwB,SAA2B;IACvD;QAA2B,wCAAS;QAmBlC,sBAAY,OAA+B,EAAE,UAA2B;YAA5D,wBAAA,EAAA,YAA+B;YAA3C,iBAMC;YALC,IAAI,IAAI,GAAG,OAAO,CAAC;YACnB,IAAI,MAAM,IAAI,OAAO,IAAI,CAAC,YAAY,IAAI,OAAO,IAAI,eAAe,IAAI,OAAO,CAAC,EAAE;gBAChF,IAAI,GAAG,YAAY,CAAC,OAAkB,CAAC,CAAC;aACzC;YACD,QAAA,kBAAM,IAAI,EAAE,UAAU,CAAC,SAAC;;QAC1B,CAAC;QAEM,2BAAI,GAAX,UAAY,OAAyB;YACnC,OAAO,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAClC,CAAC;QAEM,8BAAO,GAAd,UAAe,OAAyB;YACtC,OAAO,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACpC,CAAC;QAhCD;;;;;;WAMG;QACW,gCAAmB,GAAY,SAAS,CAAC,qBAAqB,CAAC,IAAI,KAAK,CAAC;QA0BzF,mBAAC;KAAA,AAlCD,CAA2B,SAAS,GAkCnC;IAED,OAAO,YAAgC,CAAC;AAC1C,CAAC\",\"sourcesContent\":[\"import {PureCollection, PureModel} from 'datx';\\nimport {IRawModel} from 'datx-utils';\\n\\nimport {flattenModel, removeModel, saveModel} from './helpers/model';\\nimport {IRequestOptions} from './interfaces/IRequestOptions';\\nimport {IRecord} from './interfaces/JsonApi';\\n\\nexport function decorateModel(BaseClass: typeof PureModel) {\\n  class JsonapiModel extends BaseClass {\\n    /**\\n     * Should the autogenerated ID be sent to the server when creating a record\\n     *\\n     * @static\\n     * @type {boolean}\\n     * @memberOf Record\\n     */\\n    public static useAutogeneratedIds: boolean = BaseClass['useAutogeneratedIds'] || false;\\n\\n    /**\\n     * Endpoint for API requests if there is no self link\\n     *\\n     * @static\\n     * @type {string|() => string}\\n     * @memberOf Record\\n     */\\n    public static endpoint: string|(() => string);\\n\\n    constructor(rawData: IRawModel|IRecord = {}, collection?: PureCollection) {\\n      let data = rawData;\\n      if ('type' in rawData && ('attributes' in rawData || 'relationships' in rawData)) {\\n        data = flattenModel(rawData as IRecord);\\n      }\\n      super(data, collection);\\n    }\\n\\n    public save(options?: IRequestOptions) {\\n      return saveModel(this, options);\\n    }\\n\\n    public destroy(options?: IRequestOptions) {\\n      return removeModel(this, options);\\n    }\\n  }\\n\\n  return JsonapiModel as typeof PureModel;\\n}\\n\"]}","dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx-jsonapi/decorateModel.d.ts","text":"import { PureModel } from 'datx';\r\nexport declare function decorateModel(BaseClass: typeof PureModel): typeof PureModel;\r\n"}}

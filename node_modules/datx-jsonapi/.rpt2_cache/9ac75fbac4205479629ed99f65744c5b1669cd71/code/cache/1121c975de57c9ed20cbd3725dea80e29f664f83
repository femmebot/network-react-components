{"code":"import * as tslib_1 from \"tslib\";\r\nimport { flattenModel, removeModel, saveModel } from './helpers/model';\r\nexport function decorateModel(BaseClass) {\r\n    var JsonapiModel = /** @class */ (function (_super) {\r\n        tslib_1.__extends(JsonapiModel, _super);\r\n        function JsonapiModel(rawData, collection) {\r\n            if (rawData === void 0) { rawData = {}; }\r\n            var _this = this;\r\n            var data = rawData;\r\n            if ('type' in rawData && ('attributes' in rawData || 'relationships' in rawData)) {\r\n                data = flattenModel(rawData);\r\n            }\r\n            _this = _super.call(this, data, collection) || this;\r\n            return _this;\r\n        }\r\n        JsonapiModel.prototype.save = function (options) {\r\n            return saveModel(this, options);\r\n        };\r\n        JsonapiModel.prototype.destroy = function (options) {\r\n            return removeModel(this, options);\r\n        };\r\n        /**\r\n         * Should the autogenerated ID be sent to the server when creating a record\r\n         *\r\n         * @static\r\n         * @type {boolean}\r\n         * @memberOf Record\r\n         */\r\n        JsonapiModel.useAutogeneratedIds = BaseClass['useAutogeneratedIds'] || false;\r\n        return JsonapiModel;\r\n    }(BaseClass));\r\n    return JsonapiModel;\r\n}\r\n","dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx-jsonapi/decorateModel.d.ts","text":"import { PureModel } from 'datx';\r\nexport declare function decorateModel(BaseClass: typeof PureModel): typeof PureModel;\r\n"}}

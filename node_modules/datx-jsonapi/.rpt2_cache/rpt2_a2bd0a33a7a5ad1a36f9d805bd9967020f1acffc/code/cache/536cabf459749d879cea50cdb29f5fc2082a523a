{"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/helpers/utils.ts\"],\"names\":[],\"mappings\":\"AAEA,gFAAgF;AAChF,MAAM,CAAC,IAAM,SAAS,GAAY,OAAO,MAAM,KAAK,WAAW,CAAC;AAEhE;;;;;;;;GAQG;AACH,MAAM,mBAAsB,MAAmB;IAC7C,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;QAChC,OAAO,MAAM,EAAE,CAAC;KACjB;IAED,OAAO,MAAM,CAAC;AAChB,CAAC\",\"sourcesContent\":[\"declare var window: object;\\n\\n// tslint:disable-next-line:no-typeof-undefined - The alternative breaks on node\\nexport const isBrowser: boolean = typeof window !== 'undefined';\\n\\n/**\\n * Returns the value if it's not a function. If it's a function\\n * it calls it.\\n *\\n * @export\\n * @template T\\n * @param {(T|(() => T))} target can be  anything or function\\n * @returns {T} value\\n */\\nexport function getValue<T>(target: T|(() => T)): T {\\n  if (typeof target === 'function') {\\n    return target();\\n  }\\n\\n  return target;\\n}\\n\"]}","code":"// tslint:disable-next-line:no-typeof-undefined - The alternative breaks on node\r\nexport var isBrowser = typeof window !== 'undefined';\r\n/**\r\n * Returns the value if it's not a function. If it's a function\r\n * it calls it.\r\n *\r\n * @export\r\n * @template T\r\n * @param {(T|(() => T))} target can be  anything or function\r\n * @returns {T} value\r\n */\r\nexport function getValue(target) {\r\n    if (typeof target === 'function') {\r\n        return target();\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=utils.js.map","dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx-jsonapi/helpers/utils.d.ts","text":"export declare const isBrowser: boolean;\r\n/**\r\n * Returns the value if it's not a function. If it's a function\r\n * it calls it.\r\n *\r\n * @export\r\n * @template T\r\n * @param {(T|(() => T))} target can be  anything or function\r\n * @returns {T} value\r\n */\r\nexport declare function getValue<T>(target: T | (() => T)): T;\r\n"}}

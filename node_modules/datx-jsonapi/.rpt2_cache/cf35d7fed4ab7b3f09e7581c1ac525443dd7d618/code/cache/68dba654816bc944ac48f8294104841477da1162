{"code":"import * as tslib_1 from \"tslib\";\r\nexport function decorateView(BaseClass) {\r\n    var JsonapiView = /** @class */ (function (_super) {\r\n        tslib_1.__extends(JsonapiView, _super);\r\n        function JsonapiView(modelType, collection, sortMethod, models, unique) {\r\n            if (models === void 0) { models = []; }\r\n            if (unique === void 0) { unique = false; }\r\n            var _this = _super.call(this, modelType, collection, sortMethod, models, unique) || this;\r\n            _this.__collection = collection;\r\n            return _this;\r\n        }\r\n        JsonapiView.prototype.sync = function (body) {\r\n            var data = this.__collection.sync(body);\r\n            if (data) {\r\n                this.add(data);\r\n            }\r\n            return data;\r\n        };\r\n        /**\r\n         * Fetch the records with the given type and id\r\n         *\r\n         * @param {number|string} type Record id\r\n         * @param {IRequestOptions} [options] Server options\r\n         * @returns {Promise<Response>} Resolves with the Response object or rejects with an error\r\n         */\r\n        JsonapiView.prototype.fetch = function (id, options) {\r\n            return this.__collection\r\n                .fetch(this.modelType, id, options)\r\n                .then(this.__addFromResponse.bind(this));\r\n        };\r\n        /**\r\n         * Fetch the first page of records of the given type\r\n         *\r\n         * @param {IRequestOptions} [options] Server options\r\n         * @returns {Promise<Response>} Resolves with the Response object or rejects with an error\r\n         */\r\n        JsonapiView.prototype.fetchAll = function (options) {\r\n            return this.__collection\r\n                .fetchAll(this.modelType, options)\r\n                .then(this.__addFromResponse.bind(this));\r\n        };\r\n        JsonapiView.prototype.__addFromResponse = function (response) {\r\n            if (response.data) {\r\n                this.add(response.data);\r\n            }\r\n            response.views.push(this);\r\n            return response;\r\n        };\r\n        return JsonapiView;\r\n    }(BaseClass));\r\n    // @ts-ignore\r\n    return JsonapiView;\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb3JhdGVWaWV3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic3JjL2RlY29yYXRlVmlldy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBYUEsTUFBTSx1QkFBMEIsU0FBc0I7SUFFcEQ7UUFBbUUsdUNBQVM7UUFHMUUscUJBQ0UsU0FBcUMsRUFDckMsVUFBOEIsRUFDOUIsVUFBc0MsRUFDdEMsTUFBeUMsRUFDekMsTUFBdUI7WUFEdkIsdUJBQUEsRUFBQSxXQUF5QztZQUN6Qyx1QkFBQSxFQUFBLGNBQXVCO1lBTHpCLFlBT0Usa0JBQU0sU0FBUyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxTQUV6RDtZQURDLEtBQUksQ0FBQyxZQUFZLEdBQUcsVUFBVSxDQUFDOztRQUNqQyxDQUFDO1FBRU0sMEJBQUksR0FBWCxVQUFZLElBQWdCO1lBQzFCLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzFDLElBQUksSUFBSSxFQUFFO2dCQUNSLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDaEI7WUFDRCxPQUFPLElBQXVCLENBQUM7UUFDakMsQ0FBQztRQUVEOzs7Ozs7V0FNRztRQUNJLDJCQUFLLEdBQVosVUFDRSxFQUFpQixFQUNqQixPQUF5QjtZQUV6QixPQUFPLElBQUksQ0FBQyxZQUFZO2lCQUNyQixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsT0FBTyxDQUFDO2lCQUNsQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBeUIsQ0FBQztRQUNyRSxDQUFDO1FBRUQ7Ozs7O1dBS0c7UUFDSSw4QkFBUSxHQUFmLFVBQ0UsT0FBeUI7WUFFekIsT0FBTyxJQUFJLENBQUMsWUFBWTtpQkFDckIsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDO2lCQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBeUIsQ0FBQztRQUNyRSxDQUFDO1FBRU8sdUNBQWlCLEdBQXpCLFVBQTBCLFFBQXFCO1lBQzdDLElBQUksUUFBUSxDQUFDLElBQUksRUFBRTtnQkFDakIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDekI7WUFDRCxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMxQixPQUFPLFFBQVEsQ0FBQztRQUNsQixDQUFDO1FBQ0gsa0JBQUM7SUFBRCxDQUFDLEFBM0RELENBQW1FLFNBQVMsR0EyRDNFO0lBRUQsYUFBYTtJQUNiLE9BQU8sV0FBZ0UsQ0FBQztBQUMxRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJSWRlbnRpZmllciwgSU1vZGVsQ29uc3RydWN0b3IsIElUeXBlLCBJVmlld0NvbnN0cnVjdG9yLCBQdXJlTW9kZWwsIFZpZXd9IGZyb20gJ2RhdHgnO1xuaW1wb3J0IHtJRGljdGlvbmFyeSwgSVJhd01vZGVsLCBtYXBJdGVtc30gZnJvbSAnZGF0eC11dGlscyc7XG5cbmltcG9ydCB7SUpzb25hcGlDb2xsZWN0aW9ufSBmcm9tICcuL2ludGVyZmFjZXMvSUpzb25hcGlDb2xsZWN0aW9uJztcbmltcG9ydCB7SUpzb25hcGlNb2RlbH0gZnJvbSAnLi9pbnRlcmZhY2VzL0lKc29uYXBpTW9kZWwnO1xuaW1wb3J0IHtJSnNvbmFwaVZpZXd9IGZyb20gJy4vaW50ZXJmYWNlcy9JSnNvbmFwaVZpZXcnO1xuaW1wb3J0IHtJUmVxdWVzdE9wdGlvbnN9IGZyb20gJy4vaW50ZXJmYWNlcy9JUmVxdWVzdE9wdGlvbnMnO1xuaW1wb3J0IHtJUmVzcG9uc2V9IGZyb20gJy4vaW50ZXJmYWNlcy9Kc29uQXBpJztcbmltcG9ydCB7SURlZmluaXRpb24sIElSZWxhdGlvbnNoaXAsIElSZXF1ZXN0fSBmcm9tICcuL2ludGVyZmFjZXMvSnNvbkFwaSc7XG5pbXBvcnQge1Jlc3BvbnNlfSBmcm9tICcuL1Jlc3BvbnNlJztcblxuZGVjbGFyZSB2YXIgd2luZG93OiBvYmplY3R8dW5kZWZpbmVkO1xuXG5leHBvcnQgZnVuY3Rpb24gZGVjb3JhdGVWaWV3PFU+KEJhc2VDbGFzczogdHlwZW9mIFZpZXcpIHtcblxuICBjbGFzcyBKc29uYXBpVmlldzxNIGV4dGVuZHMgSUpzb25hcGlNb2RlbCA9IElKc29uYXBpTW9kZWw+IGV4dGVuZHMgQmFzZUNsYXNzIHtcbiAgICBwcm90ZWN0ZWQgX19jb2xsZWN0aW9uOiBJSnNvbmFwaUNvbGxlY3Rpb247XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgIG1vZGVsVHlwZTogSU1vZGVsQ29uc3RydWN0b3I8TT58SVR5cGUsXG4gICAgICBjb2xsZWN0aW9uOiBJSnNvbmFwaUNvbGxlY3Rpb24sXG4gICAgICBzb3J0TWV0aG9kPzogc3RyaW5nfCgoaXRlbTogTSkgPT4gYW55KSxcbiAgICAgIG1vZGVsczogQXJyYXk8SUlkZW50aWZpZXJ8UHVyZU1vZGVsPiA9IFtdLFxuICAgICAgdW5pcXVlOiBib29sZWFuID0gZmFsc2UsXG4gICAgKSB7XG4gICAgICBzdXBlcihtb2RlbFR5cGUsIGNvbGxlY3Rpb24sIHNvcnRNZXRob2QsIG1vZGVscywgdW5pcXVlKTtcbiAgICAgIHRoaXMuX19jb2xsZWN0aW9uID0gY29sbGVjdGlvbjtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3luYyhib2R5PzogSVJlc3BvbnNlKTogTXxBcnJheTxNPnxudWxsIHtcbiAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLl9fY29sbGVjdGlvbi5zeW5jKGJvZHkpO1xuICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgdGhpcy5hZGQoZGF0YSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZGF0YSBhcyBNfEFycmF5PE0+fG51bGw7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRmV0Y2ggdGhlIHJlY29yZHMgd2l0aCB0aGUgZ2l2ZW4gdHlwZSBhbmQgaWRcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfHN0cmluZ30gdHlwZSBSZWNvcmQgaWRcbiAgICAgKiBAcGFyYW0ge0lSZXF1ZXN0T3B0aW9uc30gW29wdGlvbnNdIFNlcnZlciBvcHRpb25zXG4gICAgICogQHJldHVybnMge1Byb21pc2U8UmVzcG9uc2U+fSBSZXNvbHZlcyB3aXRoIHRoZSBSZXNwb25zZSBvYmplY3Qgb3IgcmVqZWN0cyB3aXRoIGFuIGVycm9yXG4gICAgICovXG4gICAgcHVibGljIGZldGNoKFxuICAgICAgaWQ6IG51bWJlcnxzdHJpbmcsXG4gICAgICBvcHRpb25zPzogSVJlcXVlc3RPcHRpb25zLFxuICAgICk6IFByb21pc2U8UmVzcG9uc2U8TT4+IHtcbiAgICAgIHJldHVybiB0aGlzLl9fY29sbGVjdGlvblxuICAgICAgICAuZmV0Y2godGhpcy5tb2RlbFR5cGUsIGlkLCBvcHRpb25zKVxuICAgICAgICAudGhlbih0aGlzLl9fYWRkRnJvbVJlc3BvbnNlLmJpbmQodGhpcykpIGFzIFByb21pc2U8UmVzcG9uc2U8TT4+O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZldGNoIHRoZSBmaXJzdCBwYWdlIG9mIHJlY29yZHMgb2YgdGhlIGdpdmVuIHR5cGVcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7SVJlcXVlc3RPcHRpb25zfSBbb3B0aW9uc10gU2VydmVyIG9wdGlvbnNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxSZXNwb25zZT59IFJlc29sdmVzIHdpdGggdGhlIFJlc3BvbnNlIG9iamVjdCBvciByZWplY3RzIHdpdGggYW4gZXJyb3JcbiAgICAgKi9cbiAgICBwdWJsaWMgZmV0Y2hBbGwoXG4gICAgICBvcHRpb25zPzogSVJlcXVlc3RPcHRpb25zLFxuICAgICk6IFByb21pc2U8UmVzcG9uc2U8TT4+IHtcbiAgICAgIHJldHVybiB0aGlzLl9fY29sbGVjdGlvblxuICAgICAgICAuZmV0Y2hBbGwodGhpcy5tb2RlbFR5cGUsIG9wdGlvbnMpXG4gICAgICAgIC50aGVuKHRoaXMuX19hZGRGcm9tUmVzcG9uc2UuYmluZCh0aGlzKSkgYXMgUHJvbWlzZTxSZXNwb25zZTxNPj47XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfX2FkZEZyb21SZXNwb25zZShyZXNwb25zZTogUmVzcG9uc2U8TT4pIHtcbiAgICAgIGlmIChyZXNwb25zZS5kYXRhKSB7XG4gICAgICAgIHRoaXMuYWRkKHJlc3BvbnNlLmRhdGEpO1xuICAgICAgfVxuICAgICAgcmVzcG9uc2Uudmlld3MucHVzaCh0aGlzKTtcbiAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9XG4gIH1cblxuICAvLyBAdHMtaWdub3JlXG4gIHJldHVybiBKc29uYXBpVmlldyBhcyBJVmlld0NvbnN0cnVjdG9yPElKc29uYXBpTW9kZWwsIFUgJiBJSnNvbmFwaVZpZXc+O1xufVxuIl19","map":{"mappings":""},"dts":{"name":"/Users/darko/Projects/mobx/datx/packages/datx-jsonapi/decorateView.d.ts","text":"import { IViewConstructor, View } from 'datx';\r\nimport { IJsonapiModel } from './interfaces/IJsonapiModel';\r\nimport { IJsonapiView } from './interfaces/IJsonapiView';\r\nexport declare function decorateView<U>(BaseClass: typeof View): IViewConstructor<IJsonapiModel, U & IJsonapiView>;\r\n"}}
